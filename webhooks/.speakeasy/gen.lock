lockVersion: 2.0.0
id: f2a15845-dc11-48d9-85a3-222c345ff88e
management:
  docChecksum: f24e0b462614546c1c9669c9b1421ddf
  docVersion: 1.0.0
  speakeasyVersion: 1.582.0
  generationVersion: 2.657.1
  releaseVersion: 0.5.0
  configChecksum: 1ef07be154a01d09c91df8e78346c99b
  repoURL: https://github.com/ava-labs/avalanche-sdk-typescript.git
  repoSubDirectory: webhooks
  installationURL: https://gitpkg.now.sh/ava-labs/avalanche-sdk-typescript/webhooks
  published: true
features:
  typescript:
    additionalDependencies: 0.1.0
    constsAndDefaults: 0.1.12
    core: 3.21.14
    defaultEnabledRetries: 0.1.0
    devContainers: 2.90.0
    enumUnions: 0.1.0
    envVarSecurityUsage: 0.1.2
    examples: 2.82.1
    globalSecurity: 2.82.13
    globalSecurityCallbacks: 0.1.0
    globalSecurityFlattening: 0.1.0
    globalServerURLs: 2.82.5
    globals: 2.82.2
    groups: 2.81.2
    mcpServer: 0.9.3
    nameOverrides: 2.81.2
    nullables: 0.1.1
    pagination: 2.83.0
    responseFormat: 0.2.3
    retries: 2.83.0
    sdkHooks: 0.3.0
    unions: 2.85.11
    webhooks: 1.5.0
generatedFiles:
  - .devcontainer/README.md
  - .devcontainer/devcontainer.json
  - .devcontainer/setup.sh
  - .gitattributes
  - .npmignore
  - FUNCTIONS.md
  - RUNTIMES.md
  - USAGE.md
  - docs/lib/utils/retryconfig.md
  - docs/models/components/accesslistdata.md
  - docs/models/components/addressactivityeventtype.md
  - docs/models/components/addressactivitymetadata.md
  - docs/models/components/addresseschangerequest.md
  - docs/models/components/commonbalancetype.md
  - docs/models/components/erctoken.md
  - docs/models/components/erctransfer.md
  - docs/models/components/evmaddressactivityrequest.md
  - docs/models/components/evmaddressactivityrequesteventtype.md
  - docs/models/components/evmaddressactivityrequestmetadata.md
  - docs/models/components/evmaddressactivityresponse.md
  - docs/models/components/globalparamnetwork.md
  - docs/models/components/healthcheckresultdto.md
  - docs/models/components/healthcheckresultdtostatus.md
  - docs/models/components/healthindicatorresultdto.md
  - docs/models/components/healthindicatorresultdtostatus.md
  - docs/models/components/listwebhookaddressesresponse.md
  - docs/models/components/listwebhooksresponse.md
  - docs/models/components/log.md
  - docs/models/components/networktokeninfo.md
  - docs/models/components/platformaddressactivitykeytype.md
  - docs/models/components/primarynetworkaddressactivityeventtype.md
  - docs/models/components/primarynetworkaddressactivitymetadata.md
  - docs/models/components/primarynetworkaddressactivityrequest.md
  - docs/models/components/primarynetworkaddressactivityrequesteventtype.md
  - docs/models/components/primarynetworkaddressactivityrequestmetadata.md
  - docs/models/components/primarynetworkaddressactivityresponse.md
  - docs/models/components/primarynetworkaddressactivitysubevents.md
  - docs/models/components/primarynetworkaddressactivitysubeventtype.md
  - docs/models/components/primarynetworkbalancethresholdfilter.md
  - docs/models/components/primarynetworktype.md
  - docs/models/components/security.md
  - docs/models/components/sharedsecretsresponse.md
  - docs/models/components/transaction.md
  - docs/models/components/transactionevent.md
  - docs/models/components/updatewebhookrequest.md
  - docs/models/components/validatoractivityeventtype.md
  - docs/models/components/validatoractivitykeytype.md
  - docs/models/components/validatoractivitymetadata.md
  - docs/models/components/validatoractivityrequest.md
  - docs/models/components/validatoractivityrequesteventtype.md
  - docs/models/components/validatoractivityrequestmetadata.md
  - docs/models/components/validatoractivityresponse.md
  - docs/models/components/validatoractivitysubevent.md
  - docs/models/components/validatoractivitysubevents.md
  - docs/models/components/webhook.md
  - docs/models/components/webhookaddressactivityresponse.md
  - docs/models/components/webhookaddressactivityresponseeventtype.md
  - docs/models/components/webhookinternaltransaction.md
  - docs/models/components/webhookstatus.md
  - docs/models/components/webhookstatustype.md
  - docs/models/errors/badgatewayerror.md
  - docs/models/errors/badgatewaymessage.md
  - docs/models/errors/badrequesterror.md
  - docs/models/errors/badrequestmessage.md
  - docs/models/errors/forbiddenerror.md
  - docs/models/errors/forbiddenmessage.md
  - docs/models/errors/internalservererror.md
  - docs/models/errors/internalservererrormessage.md
  - docs/models/errors/notfounderror.md
  - docs/models/errors/notfoundmessage.md
  - docs/models/errors/serviceunavailableerror.md
  - docs/models/errors/serviceunavailablemessage.md
  - docs/models/errors/toomanyrequestserror.md
  - docs/models/errors/toomanyrequestsmessage.md
  - docs/models/errors/unauthorizederror.md
  - docs/models/errors/unauthorizedmessage.md
  - docs/models/operations/addaddressestowebhookrequest.md
  - docs/models/operations/createwebhookrequest.md
  - docs/models/operations/createwebhookresponse.md
  - docs/models/operations/deactivatewebhookrequest.md
  - docs/models/operations/deactivatewebhookresponse.md
  - docs/models/operations/getaddressesfromwebhookrequest.md
  - docs/models/operations/getaddressesfromwebhookresponse.md
  - docs/models/operations/getwebhookrequest.md
  - docs/models/operations/getwebhookresponse.md
  - docs/models/operations/listwebhooksrequest.md
  - docs/models/operations/listwebhooksresponse.md
  - docs/models/operations/removeaddressesfromwebhookrequest.md
  - docs/models/operations/updatewebhookrequest.md
  - docs/models/operations/updatewebhookresponse.md
  - docs/sdks/addresses/README.md
  - docs/sdks/avalanche/README.md
  - docs/sdks/webhooks/README.md
  - eslint.config.mjs
  - examples/.env.template
  - examples/README.md
  - examples/package.json
  - examples/webhooksCreate.example.ts
  - package.json
  - src/core.ts
  - src/funcs/webhooksAddressesAdd.ts
  - src/funcs/webhooksAddressesList.ts
  - src/funcs/webhooksAddressesRemove.ts
  - src/funcs/webhooksCreate.ts
  - src/funcs/webhooksDeactivate.ts
  - src/funcs/webhooksGenerateOrRotateSharedSecret.ts
  - src/funcs/webhooksGet.ts
  - src/funcs/webhooksGetSharedSecret.ts
  - src/funcs/webhooksHealthCheck.ts
  - src/funcs/webhooksList.ts
  - src/funcs/webhooksUpdate.ts
  - src/hooks/hooks.ts
  - src/hooks/index.ts
  - src/hooks/types.ts
  - src/index.ts
  - src/lib/base64.ts
  - src/lib/config.ts
  - src/lib/dlv.ts
  - src/lib/encodings.ts
  - src/lib/files.ts
  - src/lib/http.ts
  - src/lib/is-plain-object.ts
  - src/lib/logger.ts
  - src/lib/matchers.ts
  - src/lib/primitives.ts
  - src/lib/retries.ts
  - src/lib/schemas.ts
  - src/lib/sdks.ts
  - src/lib/security.ts
  - src/lib/url.ts
  - src/mcp-server/build.mts
  - src/mcp-server/cli.ts
  - src/mcp-server/cli/start/command.ts
  - src/mcp-server/cli/start/impl.ts
  - src/mcp-server/console-logger.ts
  - src/mcp-server/extensions.ts
  - src/mcp-server/mcp-server.ts
  - src/mcp-server/prompts.ts
  - src/mcp-server/resources.ts
  - src/mcp-server/scopes.ts
  - src/mcp-server/server.ts
  - src/mcp-server/shared.ts
  - src/mcp-server/tools.ts
  - src/mcp-server/tools/webhooksAddressesAdd.ts
  - src/mcp-server/tools/webhooksAddressesList.ts
  - src/mcp-server/tools/webhooksAddressesRemove.ts
  - src/mcp-server/tools/webhooksCreate.ts
  - src/mcp-server/tools/webhooksDeactivate.ts
  - src/mcp-server/tools/webhooksGenerateOrRotateSharedSecret.ts
  - src/mcp-server/tools/webhooksGet.ts
  - src/mcp-server/tools/webhooksGetSharedSecret.ts
  - src/mcp-server/tools/webhooksHealthCheck.ts
  - src/mcp-server/tools/webhooksList.ts
  - src/mcp-server/tools/webhooksUpdate.ts
  - src/models/components/accesslistdata.ts
  - src/models/components/addressactivityeventtype.ts
  - src/models/components/addressactivitymetadata.ts
  - src/models/components/addresseschangerequest.ts
  - src/models/components/commonbalancetype.ts
  - src/models/components/erctoken.ts
  - src/models/components/erctransfer.ts
  - src/models/components/evmaddressactivityrequest.ts
  - src/models/components/evmaddressactivityresponse.ts
  - src/models/components/globalparamnetwork.ts
  - src/models/components/healthcheckresultdto.ts
  - src/models/components/healthindicatorresultdto.ts
  - src/models/components/index.ts
  - src/models/components/listwebhookaddressesresponse.ts
  - src/models/components/listwebhooksresponse.ts
  - src/models/components/log.ts
  - src/models/components/networktokeninfo.ts
  - src/models/components/platformaddressactivitykeytype.ts
  - src/models/components/primarynetworkaddressactivityeventtype.ts
  - src/models/components/primarynetworkaddressactivitymetadata.ts
  - src/models/components/primarynetworkaddressactivityrequest.ts
  - src/models/components/primarynetworkaddressactivityresponse.ts
  - src/models/components/primarynetworkaddressactivitysubevents.ts
  - src/models/components/primarynetworkaddressactivitysubeventtype.ts
  - src/models/components/primarynetworkbalancethresholdfilter.ts
  - src/models/components/primarynetworktype.ts
  - src/models/components/security.ts
  - src/models/components/sharedsecretsresponse.ts
  - src/models/components/transaction.ts
  - src/models/components/transactionevent.ts
  - src/models/components/updatewebhookrequest.ts
  - src/models/components/validatoractivityeventtype.ts
  - src/models/components/validatoractivitykeytype.ts
  - src/models/components/validatoractivitymetadata.ts
  - src/models/components/validatoractivityrequest.ts
  - src/models/components/validatoractivityresponse.ts
  - src/models/components/validatoractivitysubevents.ts
  - src/models/components/webhookaddressactivityresponse.ts
  - src/models/components/webhookinternaltransaction.ts
  - src/models/components/webhookstatus.ts
  - src/models/components/webhookstatustype.ts
  - src/models/errors/avalancheapierror.ts
  - src/models/errors/avalancheerror.ts
  - src/models/errors/badgatewayerror.ts
  - src/models/errors/badrequesterror.ts
  - src/models/errors/forbiddenerror.ts
  - src/models/errors/httpclienterrors.ts
  - src/models/errors/index.ts
  - src/models/errors/internalservererror.ts
  - src/models/errors/notfounderror.ts
  - src/models/errors/responsevalidationerror.ts
  - src/models/errors/sdkvalidationerror.ts
  - src/models/errors/serviceunavailableerror.ts
  - src/models/errors/toomanyrequestserror.ts
  - src/models/errors/unauthorizederror.ts
  - src/models/operations/addaddressestowebhook.ts
  - src/models/operations/createwebhook.ts
  - src/models/operations/deactivatewebhook.ts
  - src/models/operations/getaddressesfromwebhook.ts
  - src/models/operations/getwebhook.ts
  - src/models/operations/index.ts
  - src/models/operations/listwebhooks.ts
  - src/models/operations/removeaddressesfromwebhook.ts
  - src/models/operations/updatewebhook.ts
  - src/sdk/addresses.ts
  - src/sdk/index.ts
  - src/sdk/sdk.ts
  - src/sdk/webhooks.ts
  - src/types/async.ts
  - src/types/blobs.ts
  - src/types/constdatetime.ts
  - src/types/enums.ts
  - src/types/fp.ts
  - src/types/index.ts
  - src/types/operations.ts
  - src/types/rfcdate.ts
  - src/types/streams.ts
  - src/types/webhooks.ts
  - tsconfig.json
examples:
  sendAddressActivityWebhook:
    speakeasy-default-send-address-activity-webhook:
      requestBody:
        application/json: {"webhookId": "401da7d9-d6d7-46c8-b431-72ff1e1543f4", "eventType": "address_activity", "messageId": "bc9732db-2430-4296-afc3-c51267beb14a", "event": {"transaction": {"blockHash": "0x2a47bebed93db4a21cc8339980f004cc67f17d0dff4a368001e450e7be2edaa0", "blockNumber": "45396106", "from": "0x737F6b0b8A04e8462d0fC7076451298F0dA9a972", "gas": "80000", "gasPrice": "52000000000", "maxFeePerGas": "52000000000", "maxPriorityFeePerGas": "2000000000", "txHash": "0xfd91150d236ec5c3b1ee325781affad5b0b4d7eb0187c84c220ab115eaa563e8", "txStatus": "1", "input": "0xa9059cbb00000000000000000000000040e832c3df9562dfae5a86a4849f27f687a9b46b00000000000000000000000000000000000000000000000000000000c68b2a69", "nonce": "0", "to": "0x9702230a8ea53601f5cd2dc00fdbc13d4df4a8c7", "transactionIndex": 1, "value": "0", "type": 2, "chainId": "43114", "receiptCumulativeGasUsed": "668508", "receiptGasUsed": "44038", "receiptEffectiveGasPrice": "27000000000", "receiptRoot": "0xe5b018c29a77c8a92c4ea2f2d7e58820283041a52e14a0620d90d13b881e1ee3", "blockTimestamp": 1715621840, "contractAddress": "0x0000000000000000000000000000000000000000", "erc20Transfers": [{"transactionHash": "0xfd91150d236ec5c3b1ee325781affad5b0b4d7eb0187c84c220ab115eaa563e8", "type": "ERC20", "from": "0x737F6b0b8A04e8462d0fC7076451298F0dA9a972", "to": "0x40E832C3Df9562DfaE5A86A4849F27F687A9B46B", "value": "3331009129", "tokenId": "2", "blockTimestamp": 1640995200, "logIndex": 5, "erc20Token": {"address": "0x9702230A8Ea53601f5cD2dc00fDBc13d4dF4A8c7", "name": "TetherToken", "symbol": "USDt", "decimals": 6, "valueWithDecimals": "3331.009129"}, "erc721Token": {"address": "0x9702230A8Ea53601f5cD2dc00fDBc13d4dF4A8c7", "name": "TetherToken", "symbol": "USDt", "decimals": 6, "valueWithDecimals": "3331.009129"}, "erc1155Token": {"address": "0x9702230A8Ea53601f5cD2dc00fDBc13d4dF4A8c7", "name": "TetherToken", "symbol": "USDt", "decimals": 6, "valueWithDecimals": "3331.009129"}}, {"transactionHash": "0xfd91150d236ec5c3b1ee325781affad5b0b4d7eb0187c84c220ab115eaa563e8", "type": "ERC20", "from": "0x737F6b0b8A04e8462d0fC7076451298F0dA9a972", "to": "0x40E832C3Df9562DfaE5A86A4849F27F687A9B46B", "value": "3331009129", "tokenId": "2", "blockTimestamp": 1640995200, "logIndex": 5, "erc20Token": {"address": "0x9702230A8Ea53601f5cD2dc00fDBc13d4dF4A8c7", "name": "TetherToken", "symbol": "USDt", "decimals": 6, "valueWithDecimals": "3331.009129"}, "erc721Token": {"address": "0x9702230A8Ea53601f5cD2dc00fDBc13d4dF4A8c7", "name": "TetherToken", "symbol": "USDt", "decimals": 6, "valueWithDecimals": "3331.009129"}, "erc1155Token": {"address": "0x9702230A8Ea53601f5cD2dc00fDBc13d4dF4A8c7", "name": "TetherToken", "symbol": "USDt", "decimals": 6, "valueWithDecimals": "3331.009129"}}], "erc721Transfers": [], "erc1155Transfers": [], "internalTransactions": [{"from": "0x737F6b0b8A04e8462d0fC7076451298F0dA9a972", "to": "0x9702230A8Ea53601f5cD2dc00fDBc13d4dF4A8c7", "internalTxType": "call", "value": "50000000000000000", "gasUsed": "44038", "gasLimit": "50000", "transactionHash": "0xfd91150d236ec5c3b1ee325781affad5b0b4d7eb0187c84c220ab115eaa563e8"}, {"from": "0x737F6b0b8A04e8462d0fC7076451298F0dA9a972", "to": "0x9702230A8Ea53601f5cD2dc00fDBc13d4dF4A8c7", "internalTxType": "call", "value": "50000000000000000", "gasUsed": "44038", "gasLimit": "50000", "transactionHash": "0xfd91150d236ec5c3b1ee325781affad5b0b4d7eb0187c84c220ab115eaa563e8"}, {"from": "0x737F6b0b8A04e8462d0fC7076451298F0dA9a972", "to": "0x9702230A8Ea53601f5cD2dc00fDBc13d4dF4A8c7", "internalTxType": "call", "value": "50000000000000000", "gasUsed": "44038", "gasLimit": "50000", "transactionHash": "0xfd91150d236ec5c3b1ee325781affad5b0b4d7eb0187c84c220ab115eaa563e8"}], "accessList": [{"accessAddresses": "0x9702230A8Ea53601f5cD2dc00fDBc13d4dF4A8c7", "storageKeys": ["<value 1>", "<value 2>"]}, {"accessAddresses": "0x9702230A8Ea53601f5cD2dc00fDBc13d4dF4A8c7", "storageKeys": ["<value 1>", "<value 2>"]}, {"accessAddresses": "0x9702230A8Ea53601f5cD2dc00fDBc13d4dF4A8c7", "storageKeys": ["<value 1>", "<value 2>"]}], "networkToken": {"tokenName": "TetherToken", "tokenSymbol": "USDt", "tokenDecimals": 6, "valueWithDecimals": "3331.009129"}}, "logs": [{"address": "0x54C800d2331E10467143911aabCa092d68bF4166", "topic0": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925", "topic1": "0x0000000000000000000000000000333883f313ad709f583d0a3d2e18a44ef29b", "topic2": "0x0000000000000000000000000000000000000000000000000000000000000000", "topic3": "0x0000000000000000000000000000000000000000000000000000000000001350", "data": "0x", "transactionIndex": 2, "logIndex": 10, "removed": false}, {"address": "0x54C800d2331E10467143911aabCa092d68bF4166", "topic0": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925", "topic1": "0x0000000000000000000000000000333883f313ad709f583d0a3d2e18a44ef29b", "topic2": "0x0000000000000000000000000000000000000000000000000000000000000000", "topic3": "0x0000000000000000000000000000000000000000000000000000000000001350", "data": "0x", "transactionIndex": 2, "logIndex": 10, "removed": false}, {"address": "0x54C800d2331E10467143911aabCa092d68bF4166", "topic0": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925", "topic1": "0x0000000000000000000000000000333883f313ad709f583d0a3d2e18a44ef29b", "topic2": "0x0000000000000000000000000000000000000000000000000000000000000000", "topic3": "0x0000000000000000000000000000000000000000000000000000000000001350", "data": "0x", "transactionIndex": 2, "logIndex": 10, "removed": false}]}}
  data-health-check:
    speakeasy-default-data-health-check:
      responses:
        "200":
          application/json: {"info": {"database": {"status": "up"}}, "error": {}, "details": {"database": {"status": "up"}}}
        "400":
          application/json: {"message": ["<value 1>", "<value 2>"], "statusCode": 400, "error": "Bad Request"}
        "401":
          application/json: {"message": [], "statusCode": 401, "error": "Unauthorized"}
        "403":
          application/json: {"message": ["<value 1>", "<value 2>"], "statusCode": 403, "error": "Forbidden"}
        "404":
          application/json: {"message": ["<value 1>", "<value 2>", "<value 3>"], "statusCode": 404, "error": "Not Found"}
        "429":
          application/json: {"message": "<value>", "statusCode": 429, "error": "Too Many Requests"}
        "500":
          application/json: {"message": [], "statusCode": 500, "error": "Internal Server Error"}
        "502":
          application/json: {"message": ["<value 1>"], "statusCode": 502, "error": "Bad Gateway"}
        "503":
          application/json: {"message": ["<value 1>"], "statusCode": 503, "error": "Service Unavailable"}
  createWebhook:
    speakeasy-default-create-webhook:
      requestBody:
        application/json: {"eventType": "address_activity", "url": "https://sophisticated-exterior.org/", "chainId": "<id>", "metadata": {"eventSignatures": ["0x61cbb2a3dee0b6064c2e681aadd61677fb4ef319f0b547508d495626f5a62f64"], "addresses": ["0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E"]}}
      responses:
        "201":
          application/json: {"id": "<id>", "url": "https://staid-noon.org/", "chainId": "<id>", "status": "inactive", "createdAt": 9478.09, "name": "<value>", "description": "bonnet failing which officially thankfully naturally cruel", "eventType": "address_activity", "metadata": {"eventSignatures": ["0x61cbb2a3dee0b6064c2e681aadd61677fb4ef319f0b547508d495626f5a62f64"], "addresses": ["0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E"]}}
        "400":
          application/json: {"message": ["<value 1>"], "statusCode": 400, "error": "Bad Request"}
        "401":
          application/json: {"message": "<value>", "statusCode": 401, "error": "Unauthorized"}
        "403":
          application/json: {"message": ["<value 1>", "<value 2>"], "statusCode": 403, "error": "Forbidden"}
        "404":
          application/json: {"message": ["<value 1>", "<value 2>"], "statusCode": 404, "error": "Not Found"}
        "429":
          application/json: {"message": [], "statusCode": 429, "error": "Too Many Requests"}
        "500":
          application/json: {"message": "<value>", "statusCode": 500, "error": "Internal Server Error"}
        "502":
          application/json: {"message": "<value>", "statusCode": 502, "error": "Bad Gateway"}
        "503":
          application/json: {"message": "<value>", "statusCode": 503, "error": "Service Unavailable"}
  listWebhooks:
    "":
      parameters:
        query:
          pageSize: 10
          status: "active"
      responses:
        "200":
          application/json: {"webhooks": []}
        "400":
          application/json: {"message": "<value>", "statusCode": 400, "error": "Bad Request"}
        "401":
          application/json: {"message": "<value>", "statusCode": 401, "error": "Unauthorized"}
        "403":
          application/json: {"message": "<value>", "statusCode": 403, "error": "Forbidden"}
        "404":
          application/json: {"message": ["<value 1>", "<value 2>", "<value 3>"], "statusCode": 404, "error": "Not Found"}
        "429":
          application/json: {"message": ["<value 1>"], "statusCode": 429, "error": "Too Many Requests"}
        "500":
          application/json: {"message": ["<value 1>"], "statusCode": 500, "error": "Internal Server Error"}
        "502":
          application/json: {"message": [], "statusCode": 502, "error": "Bad Gateway"}
        "503":
          application/json: {"message": [], "statusCode": 503, "error": "Service Unavailable"}
    speakeasy-default-list-webhooks:
      parameters:
        query:
          pageSize: 10
          status: "active"
      responses:
        "200":
          application/json: {"webhooks": []}
        "400":
          application/json: {"message": "<value>", "statusCode": 400, "error": "Bad Request"}
        "401":
          application/json: {"message": "<value>", "statusCode": 401, "error": "Unauthorized"}
        "403":
          application/json: {"message": "<value>", "statusCode": 403, "error": "Forbidden"}
        "404":
          application/json: {"message": ["<value 1>", "<value 2>", "<value 3>"], "statusCode": 404, "error": "Not Found"}
        "429":
          application/json: {"message": ["<value 1>"], "statusCode": 429, "error": "Too Many Requests"}
        "500":
          application/json: {"message": ["<value 1>"], "statusCode": 500, "error": "Internal Server Error"}
        "502":
          application/json: {"message": [], "statusCode": 502, "error": "Bad Gateway"}
        "503":
          application/json: {"message": [], "statusCode": 503, "error": "Service Unavailable"}
  getWebhook:
    "":
      parameters:
        path:
          id: "f33de69c-d13b-4691-908f-870d6e2e6b04"
      responses:
        "200":
          application/json: {"id": "<id>", "eventType": "validator_activity", "url": "https://shrill-feather.name", "chainId": "<id>", "status": "active", "createdAt": 3272.52, "name": "<value>", "description": "ah interestingly knuckle helplessly not enrich", "metadata": {"keyType": "subnetId", "keys": ["<value 1>", "<value 2>"], "eventSignatures": ["0x61cbb2a3dee0b6064c2e681aadd61677fb4ef319f0b547508d495626f5a62f64"]}}
        "400":
          application/json: {"message": ["<value 1>"], "statusCode": 400, "error": "Bad Request"}
        "401":
          application/json: {"message": "<value>", "statusCode": 401, "error": "Unauthorized"}
        "403":
          application/json: {"message": "<value>", "statusCode": 403, "error": "Forbidden"}
        "404":
          application/json: {"message": [], "statusCode": 404, "error": "Not Found"}
        "429":
          application/json: {"message": ["<value 1>"], "statusCode": 429, "error": "Too Many Requests"}
        "500":
          application/json: {"message": "<value>", "statusCode": 500, "error": "Internal Server Error"}
        "502":
          application/json: {"message": "<value>", "statusCode": 502, "error": "Bad Gateway"}
        "503":
          application/json: {"message": "<value>", "statusCode": 503, "error": "Service Unavailable"}
    speakeasy-default-get-webhook:
      parameters:
        path:
          id: "f33de69c-d13b-4691-908f-870d6e2e6b04"
      responses:
        "200":
          application/json: {"id": "<id>", "url": "https://shrill-feather.name", "chainId": "<id>", "status": "active", "createdAt": 3272.52, "name": "<value>", "description": "ah interestingly knuckle helplessly not enrich", "eventType": "validator_activity", "metadata": {"eventSignatures": ["0x61cbb2a3dee0b6064c2e681aadd61677fb4ef319f0b547508d495626f5a62f64"], "keyType": "subnetId", "keys": ["<value 1>", "<value 2>"], "subEvents": {"validatorActivitySubEvents": ["l1_validator_balance_threshold"]}}}
        "400":
          application/json: {"message": ["<value 1>"], "statusCode": 400, "error": "Bad Request"}
        "401":
          application/json: {"message": "<value>", "statusCode": 401, "error": "Unauthorized"}
        "403":
          application/json: {"message": "<value>", "statusCode": 403, "error": "Forbidden"}
        "404":
          application/json: {"message": [], "statusCode": 404, "error": "Not Found"}
        "429":
          application/json: {"message": ["<value 1>"], "statusCode": 429, "error": "Too Many Requests"}
        "500":
          application/json: {"message": "<value>", "statusCode": 500, "error": "Internal Server Error"}
        "502":
          application/json: {"message": "<value>", "statusCode": 502, "error": "Bad Gateway"}
        "503":
          application/json: {"message": "<value>", "statusCode": 503, "error": "Service Unavailable"}
  deactivateWebhook:
    "":
      parameters:
        path:
          id: "f33de69c-d13b-4691-908f-870d6e2e6b04"
      responses:
        "200":
          application/json: {"id": "<id>", "eventType": "platform_address_activity", "url": "https://orange-igloo.info", "chainId": "<id>", "status": "inactive", "createdAt": 9870.51, "name": "<value>", "description": "ack scary foot", "metadata": {"keyType": "addresses", "keys": ["<value 1>", "<value 2>", "<value 3>"], "eventSignatures": ["0x61cbb2a3dee0b6064c2e681aadd61677fb4ef319f0b547508d495626f5a62f64"]}}
        "400":
          application/json: {"message": "<value>", "statusCode": 400, "error": "Bad Request"}
        "401":
          application/json: {"message": [], "statusCode": 401, "error": "Unauthorized"}
        "403":
          application/json: {"message": [], "statusCode": 403, "error": "Forbidden"}
        "404":
          application/json: {"message": ["<value 1>", "<value 2>"], "statusCode": 404, "error": "Not Found"}
        "429":
          application/json: {"message": "<value>", "statusCode": 429, "error": "Too Many Requests"}
        "500":
          application/json: {"message": ["<value 1>", "<value 2>", "<value 3>"], "statusCode": 500, "error": "Internal Server Error"}
        "502":
          application/json: {"message": ["<value 1>"], "statusCode": 502, "error": "Bad Gateway"}
        "503":
          application/json: {"message": ["<value 1>"], "statusCode": 503, "error": "Service Unavailable"}
    speakeasy-default-deactivate-webhook:
      parameters:
        path:
          id: "f33de69c-d13b-4691-908f-870d6e2e6b04"
      responses:
        "200":
          application/json: {"id": "<id>", "url": "https://orange-igloo.info", "chainId": "<id>", "status": "inactive", "createdAt": 9870.51, "name": "<value>", "description": "ack scary foot", "eventType": "validator_activity", "metadata": {"eventSignatures": ["0x61cbb2a3dee0b6064c2e681aadd61677fb4ef319f0b547508d495626f5a62f64"], "keyType": "subnetId", "keys": ["<value 1>", "<value 2>", "<value 3>"], "subEvents": {"validatorActivitySubEvents": ["l1_validator_disabled"]}}}
        "400":
          application/json: {"message": "<value>", "statusCode": 400, "error": "Bad Request"}
        "401":
          application/json: {"message": [], "statusCode": 401, "error": "Unauthorized"}
        "403":
          application/json: {"message": [], "statusCode": 403, "error": "Forbidden"}
        "404":
          application/json: {"message": ["<value 1>", "<value 2>"], "statusCode": 404, "error": "Not Found"}
        "429":
          application/json: {"message": "<value>", "statusCode": 429, "error": "Too Many Requests"}
        "500":
          application/json: {"message": ["<value 1>", "<value 2>", "<value 3>"], "statusCode": 500, "error": "Internal Server Error"}
        "502":
          application/json: {"message": ["<value 1>"], "statusCode": 502, "error": "Bad Gateway"}
        "503":
          application/json: {"message": ["<value 1>"], "statusCode": 503, "error": "Service Unavailable"}
  updateWebhook:
    "":
      parameters:
        path:
          id: "f33de69c-d13b-4691-908f-870d6e2e6b04"
      requestBody:
        application/json: {}
      responses:
        "200":
          application/json: {"id": "<id>", "eventType": "platform_address_activity", "url": "https://puzzled-confusion.com/", "chainId": "<id>", "status": "active", "createdAt": 2194.04, "name": "<value>", "description": "ick athwart mid", "metadata": {"keyType": "addresses", "keys": ["<value 1>", "<value 2>"], "eventSignatures": ["0x61cbb2a3dee0b6064c2e681aadd61677fb4ef319f0b547508d495626f5a62f64"]}}
        "400":
          application/json: {"message": ["<value 1>", "<value 2>", "<value 3>"], "statusCode": 400, "error": "Bad Request"}
        "401":
          application/json: {"message": ["<value 1>", "<value 2>"], "statusCode": 401, "error": "Unauthorized"}
        "403":
          application/json: {"message": ["<value 1>", "<value 2>"], "statusCode": 403, "error": "Forbidden"}
        "404":
          application/json: {"message": ["<value 1>"], "statusCode": 404, "error": "Not Found"}
        "429":
          application/json: {"message": "<value>", "statusCode": 429, "error": "Too Many Requests"}
        "500":
          application/json: {"message": "<value>", "statusCode": 500, "error": "Internal Server Error"}
        "502":
          application/json: {"message": ["<value 1>"], "statusCode": 502, "error": "Bad Gateway"}
        "503":
          application/json: {"message": "<value>", "statusCode": 503, "error": "Service Unavailable"}
    speakeasy-default-update-webhook:
      parameters:
        path:
          id: "f33de69c-d13b-4691-908f-870d6e2e6b04"
      requestBody:
        application/json: {}
      responses:
        "200":
          application/json: {"id": "<id>", "url": "https://puzzled-confusion.com/", "chainId": "<id>", "status": "active", "createdAt": 2194.04, "name": "<value>", "description": "ick athwart mid", "eventType": "validator_activity", "metadata": {"eventSignatures": ["0x61cbb2a3dee0b6064c2e681aadd61677fb4ef319f0b547508d495626f5a62f64"], "keyType": "subnetId", "keys": ["<value 1>", "<value 2>"], "subEvents": {"validatorActivitySubEvents": []}}}
        "400":
          application/json: {"message": ["<value 1>", "<value 2>", "<value 3>"], "statusCode": 400, "error": "Bad Request"}
        "401":
          application/json: {"message": ["<value 1>", "<value 2>"], "statusCode": 401, "error": "Unauthorized"}
        "403":
          application/json: {"message": ["<value 1>", "<value 2>"], "statusCode": 403, "error": "Forbidden"}
        "404":
          application/json: {"message": ["<value 1>"], "statusCode": 404, "error": "Not Found"}
        "429":
          application/json: {"message": "<value>", "statusCode": 429, "error": "Too Many Requests"}
        "500":
          application/json: {"message": "<value>", "statusCode": 500, "error": "Internal Server Error"}
        "502":
          application/json: {"message": ["<value 1>"], "statusCode": 502, "error": "Bad Gateway"}
        "503":
          application/json: {"message": "<value>", "statusCode": 503, "error": "Service Unavailable"}
  generateOrRotateSharedSecret:
    speakeasy-default-generate-or-rotate-shared-secret:
      responses:
        "201":
          application/json: {"secret": "<value>"}
        "400":
          application/json: {"message": ["<value 1>"], "statusCode": 400, "error": "Bad Request"}
        "401":
          application/json: {"message": "<value>", "statusCode": 401, "error": "Unauthorized"}
        "403":
          application/json: {"message": [], "statusCode": 403, "error": "Forbidden"}
        "404":
          application/json: {"message": "<value>", "statusCode": 404, "error": "Not Found"}
        "429":
          application/json: {"message": ["<value 1>", "<value 2>", "<value 3>"], "statusCode": 429, "error": "Too Many Requests"}
        "500":
          application/json: {"message": ["<value 1>", "<value 2>", "<value 3>"], "statusCode": 500, "error": "Internal Server Error"}
        "502":
          application/json: {"message": ["<value 1>"], "statusCode": 502, "error": "Bad Gateway"}
        "503":
          application/json: {"message": ["<value 1>"], "statusCode": 503, "error": "Service Unavailable"}
  getSharedSecret:
    speakeasy-default-get-shared-secret:
      responses:
        "200":
          application/json: {"secret": "<value>"}
        "400":
          application/json: {"message": ["<value 1>"], "statusCode": 400, "error": "Bad Request"}
        "401":
          application/json: {"message": [], "statusCode": 401, "error": "Unauthorized"}
        "403":
          application/json: {"message": "<value>", "statusCode": 403, "error": "Forbidden"}
        "404":
          application/json: {"message": "<value>", "statusCode": 404, "error": "Not Found"}
        "429":
          application/json: {"message": "<value>", "statusCode": 429, "error": "Too Many Requests"}
        "500":
          application/json: {"message": "<value>", "statusCode": 500, "error": "Internal Server Error"}
        "502":
          application/json: {"message": "<value>", "statusCode": 502, "error": "Bad Gateway"}
        "503":
          application/json: {"message": ["<value 1>", "<value 2>"], "statusCode": 503, "error": "Service Unavailable"}
  addAddressesToWebhook:
    "":
      parameters:
        path:
          id: "f33de69c-d13b-4691-908f-870d6e2e6b04"
      requestBody:
        application/json: {"addresses": ["0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E"]}
      responses:
        "200":
          application/json: {"id": "<id>", "eventType": "platform_address_activity", "url": "https://apprehensive-unit.net/", "chainId": "<id>", "status": "inactive", "createdAt": 9755.42, "name": "<value>", "description": "wetly woot challenge that irresponsible requite rectangular wherever noted", "metadata": {"addresses": ["0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E"], "eventSignatures": ["0x61cbb2a3dee0b6064c2e681aadd61677fb4ef319f0b547508d495626f5a62f64"]}}
        "400":
          application/json: {"message": "<value>", "statusCode": 400, "error": "Bad Request"}
        "401":
          application/json: {"message": ["<value 1>"], "statusCode": 401, "error": "Unauthorized"}
        "403":
          application/json: {"message": ["<value 1>", "<value 2>", "<value 3>"], "statusCode": 403, "error": "Forbidden"}
        "404":
          application/json: {"message": "<value>", "statusCode": 404, "error": "Not Found"}
        "429":
          application/json: {"message": ["<value 1>", "<value 2>", "<value 3>"], "statusCode": 429, "error": "Too Many Requests"}
        "500":
          application/json: {"message": "<value>", "statusCode": 500, "error": "Internal Server Error"}
        "502":
          application/json: {"message": "<value>", "statusCode": 502, "error": "Bad Gateway"}
        "503":
          application/json: {"message": "<value>", "statusCode": 503, "error": "Service Unavailable"}
    speakeasy-default-add-addresses-to-webhook:
      parameters:
        path:
          id: "f33de69c-d13b-4691-908f-870d6e2e6b04"
      requestBody:
        application/json: {"addresses": ["0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E"]}
      responses:
        "200":
          application/json: {"id": "<id>", "url": "https://apprehensive-unit.net/", "chainId": "<id>", "status": "inactive", "createdAt": 9755.42, "name": "<value>", "description": "wetly woot challenge that irresponsible requite rectangular wherever noted", "eventType": "address_activity", "metadata": {"eventSignatures": ["0x61cbb2a3dee0b6064c2e681aadd61677fb4ef319f0b547508d495626f5a62f64"], "addresses": ["0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E"]}}
        "400":
          application/json: {"message": "<value>", "statusCode": 400, "error": "Bad Request"}
        "401":
          application/json: {"message": ["<value 1>"], "statusCode": 401, "error": "Unauthorized"}
        "403":
          application/json: {"message": ["<value 1>", "<value 2>", "<value 3>"], "statusCode": 403, "error": "Forbidden"}
        "404":
          application/json: {"message": "<value>", "statusCode": 404, "error": "Not Found"}
        "429":
          application/json: {"message": ["<value 1>", "<value 2>", "<value 3>"], "statusCode": 429, "error": "Too Many Requests"}
        "500":
          application/json: {"message": "<value>", "statusCode": 500, "error": "Internal Server Error"}
        "502":
          application/json: {"message": "<value>", "statusCode": 502, "error": "Bad Gateway"}
        "503":
          application/json: {"message": "<value>", "statusCode": 503, "error": "Service Unavailable"}
  removeAddressesFromWebhook:
    "":
      parameters:
        path:
          id: "f33de69c-d13b-4691-908f-870d6e2e6b04"
      requestBody:
        application/json: {"addresses": ["0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E"]}
      responses:
        "200":
          application/json: {"id": "<id>", "eventType": "validator_activity", "url": "https://ornery-colon.info", "chainId": "<id>", "status": "inactive", "createdAt": 5668.34, "name": "<value>", "description": "colorful emphasise worth intervention wherever onto mill custom for", "metadata": {"addresses": ["0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E"], "eventSignatures": ["0x61cbb2a3dee0b6064c2e681aadd61677fb4ef319f0b547508d495626f5a62f64"]}}
        "400":
          application/json: {"message": "<value>", "statusCode": 400, "error": "Bad Request"}
        "401":
          application/json: {"message": ["<value 1>"], "statusCode": 401, "error": "Unauthorized"}
        "403":
          application/json: {"message": "<value>", "statusCode": 403, "error": "Forbidden"}
        "404":
          application/json: {"message": "<value>", "statusCode": 404, "error": "Not Found"}
        "429":
          application/json: {"message": "<value>", "statusCode": 429, "error": "Too Many Requests"}
        "500":
          application/json: {"message": "<value>", "statusCode": 500, "error": "Internal Server Error"}
        "502":
          application/json: {"message": ["<value 1>", "<value 2>", "<value 3>"], "statusCode": 502, "error": "Bad Gateway"}
        "503":
          application/json: {"message": ["<value 1>"], "statusCode": 503, "error": "Service Unavailable"}
    speakeasy-default-remove-addresses-from-webhook:
      parameters:
        path:
          id: "f33de69c-d13b-4691-908f-870d6e2e6b04"
      requestBody:
        application/json: {"addresses": ["0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E"]}
      responses:
        "200":
          application/json: {"id": "<id>", "url": "https://ornery-colon.info", "chainId": "<id>", "status": "inactive", "createdAt": 5668.34, "name": "<value>", "description": "colorful emphasise worth intervention wherever onto mill custom for", "eventType": "address_activity", "metadata": {"eventSignatures": ["0x61cbb2a3dee0b6064c2e681aadd61677fb4ef319f0b547508d495626f5a62f64"], "addresses": ["0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E"]}}
        "400":
          application/json: {"message": "<value>", "statusCode": 400, "error": "Bad Request"}
        "401":
          application/json: {"message": ["<value 1>"], "statusCode": 401, "error": "Unauthorized"}
        "403":
          application/json: {"message": "<value>", "statusCode": 403, "error": "Forbidden"}
        "404":
          application/json: {"message": "<value>", "statusCode": 404, "error": "Not Found"}
        "429":
          application/json: {"message": "<value>", "statusCode": 429, "error": "Too Many Requests"}
        "500":
          application/json: {"message": "<value>", "statusCode": 500, "error": "Internal Server Error"}
        "502":
          application/json: {"message": ["<value 1>", "<value 2>", "<value 3>"], "statusCode": 502, "error": "Bad Gateway"}
        "503":
          application/json: {"message": ["<value 1>"], "statusCode": 503, "error": "Service Unavailable"}
  getAddressesFromWebhook:
    "":
      parameters:
        path:
          id: "f33de69c-d13b-4691-908f-870d6e2e6b04"
        query:
          pageSize: 10
      responses:
        "200":
          application/json: {"addresses": [], "totalAddresses": 5926.55}
        "400":
          application/json: {"message": "<value>", "statusCode": 400, "error": "Bad Request"}
        "401":
          application/json: {"message": "<value>", "statusCode": 401, "error": "Unauthorized"}
        "403":
          application/json: {"message": [], "statusCode": 403, "error": "Forbidden"}
        "404":
          application/json: {"message": "<value>", "statusCode": 404, "error": "Not Found"}
        "429":
          application/json: {"message": ["<value 1>", "<value 2>"], "statusCode": 429, "error": "Too Many Requests"}
        "500":
          application/json: {"message": ["<value 1>", "<value 2>"], "statusCode": 500, "error": "Internal Server Error"}
        "502":
          application/json: {"message": "<value>", "statusCode": 502, "error": "Bad Gateway"}
        "503":
          application/json: {"message": [], "statusCode": 503, "error": "Service Unavailable"}
    speakeasy-default-get-addresses-from-webhook:
      parameters:
        path:
          id: "f33de69c-d13b-4691-908f-870d6e2e6b04"
        query:
          pageSize: 10
      responses:
        "200":
          application/json: {"addresses": [], "totalAddresses": 5926.55}
        "400":
          application/json: {"message": "<value>", "statusCode": 400, "error": "Bad Request"}
        "401":
          application/json: {"message": "<value>", "statusCode": 401, "error": "Unauthorized"}
        "403":
          application/json: {"message": [], "statusCode": 403, "error": "Forbidden"}
        "404":
          application/json: {"message": "<value>", "statusCode": 404, "error": "Not Found"}
        "429":
          application/json: {"message": ["<value 1>", "<value 2>"], "statusCode": 429, "error": "Too Many Requests"}
        "500":
          application/json: {"message": ["<value 1>", "<value 2>"], "statusCode": 500, "error": "Internal Server Error"}
        "502":
          application/json: {"message": "<value>", "statusCode": 502, "error": "Bad Gateway"}
        "503":
          application/json: {"message": [], "statusCode": 503, "error": "Service Unavailable"}
examplesVersion: 1.0.2
generatedTests: {}
