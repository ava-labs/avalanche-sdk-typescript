DEBUG	append_error: Renamed component to "BadRequest_error" 
	 labels: "original_name:BadRequest scope:errors data_type:error" 
	 registrationID: "scope:errors refType:Schemas refName:BadRequest component:true originalName:BadRequest"
DEBUG	append_error: Renamed component to "Unauthorized_error" 
	 labels: "original_name:Unauthorized scope:errors data_type:error" 
	 registrationID: "scope:errors refType:Schemas refName:Unauthorized component:true originalName:Unauthorized"
DEBUG	append_error: Renamed component to "Forbidden_error" 
	 labels: "original_name:Forbidden scope:errors data_type:error" 
	 registrationID: "scope:errors refType:Schemas refName:Forbidden component:true originalName:Forbidden"
DEBUG	append_error: Renamed component to "NotFound_error" 
	 labels: "original_name:NotFound scope:errors data_type:error" 
	 registrationID: "scope:errors refType:Schemas refName:NotFound component:true originalName:NotFound"
DEBUG	append_error: Renamed component to "TooManyRequests_error" 
	 labels: "original_name:TooManyRequests scope:errors data_type:error" 
	 registrationID: "scope:errors refType:Schemas refName:TooManyRequests component:true originalName:TooManyRequests"
DEBUG	append_error: Renamed component to "BadGateway_error" 
	 labels: "original_name:BadGateway scope:errors data_type:error" 
	 registrationID: "scope:errors refType:Schemas refName:BadGateway component:true originalName:BadGateway"
DEBUG	append_error: Renamed component to "ServiceUnavailable_error" 
	 labels: "original_name:ServiceUnavailable scope:errors data_type:error" 
	 registrationID: "scope:errors refType:Schemas refName:ServiceUnavailable component:true originalName:ServiceUnavailable"
DEBUG	prepend_op_id: Renamed to "createWebhook_request" 
	 labels: "original_name:request operation:createWebhook operationTag:webhooks data_type:union" 
	 registrationID: "scope:operations operationTag:webhooks operation:createWebhook requestResponse:request originalName:RequestBody"
DEBUG	

--- Renaming 2 types with name "status" ---
DEBUG	discriminated: Renamed to "HealthCheckResultDto_status" 
	 labels: "original_name:status scope:shared data_type:enum refName:HealthCheckResultDto" 
	 registrationID: "scope:shared refType:Schemas refName:HealthCheckResultDto originalName:status"
DEBUG	discriminated: Renamed to "HealthIndicatorResultDto_status" 
	 labels: "original_name:status scope:shared data_type:enum refName:HealthIndicatorResultDto" 
	 registrationID: "scope:shared refType:Schemas refName:HealthIndicatorResultDto originalName:status"
DEBUG	

--- Renaming 4 types with name "eventType" ---
DEBUG	discriminated: Renamed to "EVMAddressActivityRequest_eventType" 
	 labels: "original_name:eventType scope:shared data_type:enum refName:EVMAddressActivityRequest constProperty:AddressActivity" 
	 registrationID: "scope:shared refType:Schemas refName:EVMAddressActivityRequest constProperty:address_activity originalName:eventType"
DEBUG	discriminated: Renamed to "PrimaryNetworkAddressActivityRequest_eventType" 
	 labels: "original_name:eventType scope:shared data_type:enum refName:PrimaryNetworkAddressActivityRequest constProperty:PrimaryNetworkAddressActivity" 
	 registrationID: "scope:shared refType:Schemas refName:PrimaryNetworkAddressActivityRequest constProperty:primary_network_address_activity originalName:eventType"
DEBUG	discriminated: Renamed to "ValidatorActivityRequest_eventType" 
	 labels: "original_name:eventType scope:shared data_type:enum refName:ValidatorActivityRequest constProperty:ValidatorActivity" 
	 registrationID: "scope:shared refType:Schemas refName:ValidatorActivityRequest constProperty:validator_activity originalName:eventType"
DEBUG	discriminated: Renamed to "WebhookAddressActivityResponse_eventType" 
	 labels: "original_name:eventType scope:shared data_type:enum refName:WebhookAddressActivityResponse constProperty:AddressActivity" 
	 registrationID: "scope:shared refType:Schemas refName:WebhookAddressActivityResponse constProperty:address_activity originalName:eventType"
DEBUG	

--- Renaming 3 types with name "metadata" ---
DEBUG	discriminated: Renamed to "EVMAddressActivityRequest_metadata" 
	 labels: "original_name:metadata scope:shared data_type:union refName:EVMAddressActivityRequest" 
	 registrationID: "scope:shared refType:Schemas refName:EVMAddressActivityRequest originalName:metadata"
DEBUG	discriminated: Renamed to "PrimaryNetworkAddressActivityRequest_metadata" 
	 labels: "original_name:metadata scope:shared data_type:union refName:PrimaryNetworkAddressActivityRequest" 
	 registrationID: "scope:shared refType:Schemas refName:PrimaryNetworkAddressActivityRequest originalName:metadata"
DEBUG	discriminated: Renamed to "ValidatorActivityRequest_metadata" 
	 labels: "original_name:metadata scope:shared data_type:union refName:ValidatorActivityRequest" 
	 registrationID: "scope:shared refType:Schemas refName:ValidatorActivityRequest originalName:metadata"
DEBUG	

--- Renaming 8 types with name "message" ---
DEBUG	discriminated: Renamed to "BadRequest_message" 
	 labels: "original_name:message scope:errors data_type:union refName:BadRequest" 
	 registrationID: "scope:errors refType:Schemas refName:BadRequest originalName:message"
DEBUG	discriminated: Renamed to "Unauthorized_message" 
	 labels: "original_name:message scope:errors data_type:union refName:Unauthorized" 
	 registrationID: "scope:errors refType:Schemas refName:Unauthorized originalName:message"
DEBUG	discriminated: Renamed to "Forbidden_message" 
	 labels: "original_name:message scope:errors data_type:union refName:Forbidden" 
	 registrationID: "scope:errors refType:Schemas refName:Forbidden originalName:message"
DEBUG	discriminated: Renamed to "NotFound_message" 
	 labels: "original_name:message scope:errors data_type:union refName:NotFound" 
	 registrationID: "scope:errors refType:Schemas refName:NotFound originalName:message"
DEBUG	discriminated: Renamed to "TooManyRequests_message" 
	 labels: "original_name:message scope:errors data_type:union refName:TooManyRequests" 
	 registrationID: "scope:errors refType:Schemas refName:TooManyRequests originalName:message"
DEBUG	discriminated: Renamed to "InternalServerError_message" 
	 labels: "original_name:message scope:errors data_type:union refName:InternalServerError" 
	 registrationID: "scope:errors refType:Schemas refName:InternalServerError originalName:message"
DEBUG	discriminated: Renamed to "BadGateway_message" 
	 labels: "original_name:message scope:errors data_type:union refName:BadGateway" 
	 registrationID: "scope:errors refType:Schemas refName:BadGateway originalName:message"
DEBUG	discriminated: Renamed to "ServiceUnavailable_message" 
	 labels: "original_name:message scope:errors data_type:union refName:ServiceUnavailable" 
	 registrationID: "scope:errors refType:Schemas refName:ServiceUnavailable originalName:message"
DEBUG	prepend_op_id: N/A rename "createWebhook_request" 
	 labels: "original_name:request operation:createWebhook operationTag:webhooks data_type:union" 
	 registrationID: "scope:operations operationTag:webhooks operation:createWebhook requestResponse:request originalName:RequestBody"
DEBUG	

Avalanche (SDK empty)
Webhooks (SDK empty)
Addresses (SDK empty)
AddAddressesToWebhookRequest (id: string, AddressesChangeRequest: AddressesChangeRequest)
 AddressesChangeRequest (addresses: array)
EvmAddressActivityResponse (id: string, url: string, chainId: string ...)
 WebhookStatusType (enum: active, inactive)
 AddressActivityEventType (enum: address_activity)
 AddressActivityMetadata (eventSignatures: array, addresses: array)
BadRequestError (error)
 BadRequestMessage (union)
UnauthorizedError (error)
 UnauthorizedMessage (union)
ForbiddenError (error)
 ForbiddenMessage (union)
NotFoundError (error)
 NotFoundMessage (union)
TooManyRequestsError (error)
 TooManyRequestsMessage (union)
InternalServerError (error)
 InternalServerErrorMessage (union)
BadGatewayError (error)
 BadGatewayMessage (union)
ServiceUnavailableError (error)
 ServiceUnavailableMessage (union)
Security (apiKey: string)
RemoveAddressesFromWebhookRequest (id: string, AddressesChangeRequest: AddressesChangeRequest)
GetAddressesFromWebhookRequest (pageToken: string, pageSize: integer, id: string)
GetAddressesFromWebhookResponse (Result: ListWebhookAddressesResponse)
 ListWebhookAddressesResponse (nextPageToken: string, addresses: array, totalAddresses: number)
HealthCheckResultDto (status: enum, info: map, error: map ...)
 HealthCheckResultDtoStatus (enum: error, ok, shutting_down)
  HealthIndicatorResultDto (status: enum)
   HealthIndicatorResultDtoStatus (enum: up, down)
CreateWebhookRequest (union)
 EvmAddressActivityRequest (eventType: enum, url: string, name: string ...)
  EvmAddressActivityRequestEventType (enum: address_activity)
  EvmAddressActivityRequestMetadata (union)
 PrimaryNetworkAddressActivityRequest (eventType: enum, url: string, name: string ...)
  PrimaryNetworkAddressActivityRequestEventType (enum: primary_network_address_activity)
  PrimaryNetworkType (enum: mainnet, fuji)
  PrimaryNetworkAddressActivityRequestMetadata (union)
   PrimaryNetworkAddressActivityMetadata (eventSignatures: array, keyType: PlatformAddressActivityKeyType, keys: array ...)
    PlatformAddressActivityKeyType (enum: addresses)
    PrimaryNetworkAddressActivitySubEvents (addressActivitySubEvents: array)
      PrimaryNetworkAddressActivitySubEventType (enum: balance_change, balance_threshold, reward_distribution)
    PrimaryNetworkBalanceThresholdFilter (balanceType: CommonBalanceType, balanceThreshold: string)
     CommonBalanceType (enum: unlockedUnstaked, unlockedStaked, lockedPlatform ...)
 ValidatorActivityRequest (eventType: enum, url: string, name: string ...)
  ValidatorActivityRequestEventType (enum: validator_activity)
  ValidatorActivityRequestMetadata (union)
   ValidatorActivityMetadata (eventSignatures: array, keyType: ValidatorActivityKeyType, keys: array ...)
    ValidatorActivityKeyType (enum: nodeId, subnetId)
    ValidatorActivitySubEvents (validatorActivitySubEvents: array)
      ValidatorActivitySubEvent (enum: validator_stake, delegator_stake, reward_distribution ...)
CreateWebhookResponse (union)
 PrimaryNetworkAddressActivityResponse (id: string, url: string, chainId: string ...)
  PrimaryNetworkAddressActivityEventType (enum: primary_network_address_activity)
 ValidatorActivityResponse (id: string, url: string, chainId: string ...)
  ValidatorActivityEventType (enum: validator_activity)
ListWebhooksRequest (pageToken: string, pageSize: integer, status: WebhookStatus)
 WebhookStatus (enum: active, inactive)
ListWebhooksResponse (Result: ListWebhooksResponse)
 ListWebhooksResponse (nextPageToken: string, webhooks: array)
   Webhook (union)
GetWebhookRequest (id: string)
GetWebhookResponse (union)
DeactivateWebhookRequest (id: string)
DeactivateWebhookResponse (union)
UpdateWebhookRequest (id: string, UpdateWebhookRequest: UpdateWebhookRequest)
 UpdateWebhookRequest (name: string, description: string, url: string ...)
UpdateWebhookResponse (union)
SharedSecretsResponse (secret: string)
WebhookAddressActivityResponse (webhookId: string, eventType: enum, messageId: string ...)
 WebhookAddressActivityResponseEventType (enum: address_activity)
 TransactionEvent (transaction: Transaction, logs: array)
  Transaction (blockHash: string, blockNumber: string, from: string ...)
    ErcTransfer (transactionHash: string, type: string, from: string ...)
     ErcToken (address: string, name: string, symbol: string ...)
    WebhookInternalTransaction (from: string, to: string, internalTxType: string ...)
    AccessListData (accessAddresses: string, storageKeys: array)
   NetworkTokenInfo (tokenName: string, tokenSymbol: string, tokenDecimals: number ...)
   Log (address: string, topic0: string, topic1: string ...)
Globals (chainId: string, network: GlobalParamNetwork)
 GlobalParamNetwork (enum: mainnet, fuji, testnet)

