/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  LatestStarsArenaBalanceParams,
  LatestStarsArenaBalanceParams$inboundSchema,
  LatestStarsArenaBalanceParams$Outbound,
  LatestStarsArenaBalanceParams$outboundSchema,
} from "./lateststarsarenabalanceparams.js";

export const TypeLatestBalanceStarsArena = {
  LatestBalanceStarsArena: "LatestBalanceStarsArena",
} as const;
export type TypeLatestBalanceStarsArena = ClosedEnum<
  typeof TypeLatestBalanceStarsArena
>;

export type LatestStarsArenaBalanceQueryDto = {
  id: string;
  type: TypeLatestBalanceStarsArena;
  params: LatestStarsArenaBalanceParams;
};

/** @internal */
export const TypeLatestBalanceStarsArena$inboundSchema: z.ZodNativeEnum<
  typeof TypeLatestBalanceStarsArena
> = z.nativeEnum(TypeLatestBalanceStarsArena);

/** @internal */
export const TypeLatestBalanceStarsArena$outboundSchema: z.ZodNativeEnum<
  typeof TypeLatestBalanceStarsArena
> = TypeLatestBalanceStarsArena$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TypeLatestBalanceStarsArena$ {
  /** @deprecated use `TypeLatestBalanceStarsArena$inboundSchema` instead. */
  export const inboundSchema = TypeLatestBalanceStarsArena$inboundSchema;
  /** @deprecated use `TypeLatestBalanceStarsArena$outboundSchema` instead. */
  export const outboundSchema = TypeLatestBalanceStarsArena$outboundSchema;
}

/** @internal */
export const LatestStarsArenaBalanceQueryDto$inboundSchema: z.ZodType<
  LatestStarsArenaBalanceQueryDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  type: TypeLatestBalanceStarsArena$inboundSchema,
  params: LatestStarsArenaBalanceParams$inboundSchema,
});

/** @internal */
export type LatestStarsArenaBalanceQueryDto$Outbound = {
  id: string;
  type: string;
  params: LatestStarsArenaBalanceParams$Outbound;
};

/** @internal */
export const LatestStarsArenaBalanceQueryDto$outboundSchema: z.ZodType<
  LatestStarsArenaBalanceQueryDto$Outbound,
  z.ZodTypeDef,
  LatestStarsArenaBalanceQueryDto
> = z.object({
  id: z.string(),
  type: TypeLatestBalanceStarsArena$outboundSchema,
  params: LatestStarsArenaBalanceParams$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LatestStarsArenaBalanceQueryDto$ {
  /** @deprecated use `LatestStarsArenaBalanceQueryDto$inboundSchema` instead. */
  export const inboundSchema = LatestStarsArenaBalanceQueryDto$inboundSchema;
  /** @deprecated use `LatestStarsArenaBalanceQueryDto$outboundSchema` instead. */
  export const outboundSchema = LatestStarsArenaBalanceQueryDto$outboundSchema;
  /** @deprecated use `LatestStarsArenaBalanceQueryDto$Outbound` instead. */
  export type Outbound = LatestStarsArenaBalanceQueryDto$Outbound;
}

export function latestStarsArenaBalanceQueryDtoToJSON(
  latestStarsArenaBalanceQueryDto: LatestStarsArenaBalanceQueryDto,
): string {
  return JSON.stringify(
    LatestStarsArenaBalanceQueryDto$outboundSchema.parse(
      latestStarsArenaBalanceQueryDto,
    ),
  );
}

export function latestStarsArenaBalanceQueryDtoFromJSON(
  jsonString: string,
): SafeParseResult<LatestStarsArenaBalanceQueryDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => LatestStarsArenaBalanceQueryDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'LatestStarsArenaBalanceQueryDto' from JSON`,
  );
}
