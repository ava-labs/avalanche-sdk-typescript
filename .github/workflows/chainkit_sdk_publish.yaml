name: Publish ChainKit SDK
permissions:
  checks: write
  contents: write
  pull-requests: write
  statuses: write
  id-token: write
"on":
  push:
    branches:
      - main
    paths:
      - chainkit/RELEASES.md
  workflow_dispatch:
    inputs:
      version:
        description: "Version to publish (e.g., 1.0.0)"
        required: true
        type: string
      tag:
        description: "Tag to publish (e.g., latest, alpha, beta, etc.)"
        required: false
        type: string
        default: ""

jobs:
  release-typescript:
    name: Generate TypeScript SDK Release
    runs-on: ubuntu-22.04
    outputs:
      typescript_directory: ${{ steps.release.outputs.typescript_directory }}
      typescript_regenerated: ${{ steps.release.outputs.typescript_regenerated }}
      publish_typescript: ${{ steps.release.outputs.publish_typescript }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Tune GitHub-hosted runner network
        uses: smorimoto/tune-github-hosted-runner-network@v1

      - id: release
        uses: speakeasy-api/sdk-generation-action@v15
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          action: "release"
          speakeasy_api_key: ${{ secrets.SPEAKEASY_API_KEY }}

  publish-typescript:
    name: Publish TypeScript SDK to npm
    needs: release-typescript
    if: ${{ github.event_name == 'workflow_dispatch' || (needs.release-typescript.outputs.typescript_regenerated == 'true' && needs.release-typescript.outputs.publish_typescript == 'true') }}
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ${{ github.event_name == 'workflow_dispatch' && 'chainkit' || needs.release-typescript.outputs.typescript_directory }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: npm install --ignore-scripts

      - name: Install bun
        run: npm rebuild bun

      - name: Update npm
        run: npm install -g npm@latest

      - name: Check if version exists
        id: check_version
        run: |
          INPUT_TAG=${{ github.event.inputs.tag }}

          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION=$(npm pkg get version | tr -d '"')
          fi

          echo "Checking if version $VERSION already exists..."

          if npm view "@avalanche-sdk/chainkit@$VERSION" version >/dev/null 2>&1; then
            echo "Version $VERSION already exists"
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "Version $VERSION does not exist"
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Publish package
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION=$(npm pkg get version | tr -d '"')
          fi

          INPUT_TAG=${{ github.event.inputs.tag }}
          EXISTS=${{ steps.check_version.outputs.exists }}

          echo "Detected version: $VERSION"
          echo "Input tag: $INPUT_TAG"
          echo "Version exists: $EXISTS"

          if [[ "$EXISTS" == "false" ]]; then
            if [[ "$VERSION" == *"-"* ]]; then
              # Prerelease: publish with auto-detected tag + add input tag if provided
              PRERELEASE=${VERSION#*-}
              TAG=${PRERELEASE%%.*}
              echo "Prerelease detected; publishing under dist-tag: $TAG"
              npm publish --tag "$TAG" --access public
            else
              # Stable: publish with latest tag
              echo "Official release detected; publishing under 'latest'"
              npm publish --access public
            fi
          fi
          if [[ -n "$INPUT_TAG" ]]; then
            echo "Adding input tag: $INPUT_TAG"
            npm dist-tag add "@avalanche-sdk/chainkit@$VERSION" "$INPUT_TAG"
          else
            echo "No input tag provided. Skipping tag addition."
          fi
