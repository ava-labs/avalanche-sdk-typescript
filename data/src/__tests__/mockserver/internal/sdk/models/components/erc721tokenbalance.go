// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type Erc721TokenBalanceErcType string

const (
	Erc721TokenBalanceErcTypeErc721 Erc721TokenBalanceErcType = "ERC-721"
)

func (e Erc721TokenBalanceErcType) ToPointer() *Erc721TokenBalanceErcType {
	return &e
}
func (e *Erc721TokenBalanceErcType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ERC-721":
		*e = Erc721TokenBalanceErcType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Erc721TokenBalanceErcType: %v", v)
	}
}

type Erc721TokenBalance struct {
	// A wallet or contract address in mixed-case checksum encoding.
	Address string `json:"address"`
	// The contract name.
	Name string `json:"name"`
	// The contract symbol.
	Symbol   string                    `json:"symbol"`
	ErcType  Erc721TokenBalanceErcType `json:"ercType"`
	TokenID  string                    `json:"tokenId"`
	TokenURI string                    `json:"tokenUri"`
	Metadata Erc721TokenMetadata       `json:"metadata"`
	// A wallet or contract address in mixed-case checksum encoding.
	OwnerAddress *string `json:"ownerAddress,omitempty"`
	// The evm chain id.
	ChainID string `json:"chainId"`
}

func (o *Erc721TokenBalance) GetAddress() string {
	if o == nil {
		return ""
	}
	return o.Address
}

func (o *Erc721TokenBalance) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *Erc721TokenBalance) GetSymbol() string {
	if o == nil {
		return ""
	}
	return o.Symbol
}

func (o *Erc721TokenBalance) GetErcType() Erc721TokenBalanceErcType {
	if o == nil {
		return Erc721TokenBalanceErcType("")
	}
	return o.ErcType
}

func (o *Erc721TokenBalance) GetTokenID() string {
	if o == nil {
		return ""
	}
	return o.TokenID
}

func (o *Erc721TokenBalance) GetTokenURI() string {
	if o == nil {
		return ""
	}
	return o.TokenURI
}

func (o *Erc721TokenBalance) GetMetadata() Erc721TokenMetadata {
	if o == nil {
		return Erc721TokenMetadata{}
	}
	return o.Metadata
}

func (o *Erc721TokenBalance) GetOwnerAddress() *string {
	if o == nil {
		return nil
	}
	return o.OwnerAddress
}

func (o *Erc721TokenBalance) GetChainID() string {
	if o == nil {
		return ""
	}
	return o.ChainID
}
