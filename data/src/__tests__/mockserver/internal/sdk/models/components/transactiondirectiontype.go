// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type TransactionDirectionType string

const (
	TransactionDirectionTypeSourceTransaction      TransactionDirectionType = "SOURCE_TRANSACTION"
	TransactionDirectionTypeDestinationTransaction TransactionDirectionType = "DESTINATION_TRANSACTION"
)

func (e TransactionDirectionType) ToPointer() *TransactionDirectionType {
	return &e
}
func (e *TransactionDirectionType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SOURCE_TRANSACTION":
		fallthrough
	case "DESTINATION_TRANSACTION":
		*e = TransactionDirectionType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TransactionDirectionType: %v", v)
	}
}
