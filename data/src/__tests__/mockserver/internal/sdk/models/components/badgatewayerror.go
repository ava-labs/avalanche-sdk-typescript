// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"errors"
	"fmt"
	"mockserver/internal/sdk/utils"
)

type BadGatewayMessageType string

const (
	BadGatewayMessageTypeStr        BadGatewayMessageType = "str"
	BadGatewayMessageTypeArrayOfStr BadGatewayMessageType = "arrayOfStr"
)

// BadGatewayMessage - The error message describing the reason for the exception
type BadGatewayMessage struct {
	Str        *string  `queryParam:"inline"`
	ArrayOfStr []string `queryParam:"inline"`

	Type BadGatewayMessageType
}

func CreateBadGatewayMessageStr(str string) BadGatewayMessage {
	typ := BadGatewayMessageTypeStr

	return BadGatewayMessage{
		Str:  &str,
		Type: typ,
	}
}

func CreateBadGatewayMessageArrayOfStr(arrayOfStr []string) BadGatewayMessage {
	typ := BadGatewayMessageTypeArrayOfStr

	return BadGatewayMessage{
		ArrayOfStr: arrayOfStr,
		Type:       typ,
	}
}

func (u *BadGatewayMessage) UnmarshalJSON(data []byte) error {

	var str string = ""
	if err := utils.UnmarshalJSON(data, &str, "", true, true); err == nil {
		u.Str = &str
		u.Type = BadGatewayMessageTypeStr
		return nil
	}

	var arrayOfStr []string = []string{}
	if err := utils.UnmarshalJSON(data, &arrayOfStr, "", true, true); err == nil {
		u.ArrayOfStr = arrayOfStr
		u.Type = BadGatewayMessageTypeArrayOfStr
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for BadGatewayMessage", string(data))
}

func (u BadGatewayMessage) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	if u.ArrayOfStr != nil {
		return utils.MarshalJSON(u.ArrayOfStr, "", true)
	}

	return nil, errors.New("could not marshal union type BadGatewayMessage: all fields are null")
}
