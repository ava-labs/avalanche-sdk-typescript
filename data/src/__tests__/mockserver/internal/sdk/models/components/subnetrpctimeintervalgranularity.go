// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type SubnetRPCTimeIntervalGranularity string

const (
	SubnetRPCTimeIntervalGranularityHourly  SubnetRPCTimeIntervalGranularity = "hourly"
	SubnetRPCTimeIntervalGranularityDaily   SubnetRPCTimeIntervalGranularity = "daily"
	SubnetRPCTimeIntervalGranularityWeekly  SubnetRPCTimeIntervalGranularity = "weekly"
	SubnetRPCTimeIntervalGranularityMonthly SubnetRPCTimeIntervalGranularity = "monthly"
)

func (e SubnetRPCTimeIntervalGranularity) ToPointer() *SubnetRPCTimeIntervalGranularity {
	return &e
}
func (e *SubnetRPCTimeIntervalGranularity) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "hourly":
		fallthrough
	case "daily":
		fallthrough
	case "weekly":
		fallthrough
	case "monthly":
		*e = SubnetRPCTimeIntervalGranularity(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SubnetRPCTimeIntervalGranularity: %v", v)
	}
}
