// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// TransactionMethodType - The contract call type. NATIVE_TRANSFER indicates a transfer of the native token without any smart-contract interaction. CONTRACT_CALL indicates a smart-contract interaction. CONTRACT_CREATION indicates a smart-contract creation.
type TransactionMethodType string

const (
	TransactionMethodTypeNativeTransfer   TransactionMethodType = "NATIVE_TRANSFER"
	TransactionMethodTypeContractCall     TransactionMethodType = "CONTRACT_CALL"
	TransactionMethodTypeContractCreation TransactionMethodType = "CONTRACT_CREATION"
)

func (e TransactionMethodType) ToPointer() *TransactionMethodType {
	return &e
}
func (e *TransactionMethodType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NATIVE_TRANSFER":
		fallthrough
	case "CONTRACT_CALL":
		fallthrough
	case "CONTRACT_CREATION":
		*e = TransactionMethodType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TransactionMethodType: %v", v)
	}
}
