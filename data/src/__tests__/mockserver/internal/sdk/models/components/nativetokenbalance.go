// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type NativeTokenBalance struct {
	// The contract name.
	Name string `json:"name"`
	// The contract symbol.
	Symbol string `json:"symbol"`
	// The number of decimals the token uses. For example `6`, means to divide the token amount by `1000000` to get its user representation.
	Decimals float64 `json:"decimals"`
	// The logo uri for the address.
	LogoURI *string `json:"logoUri,omitempty"`
	// The evm chain id.
	ChainID string `json:"chainId"`
	// The token price, if available.
	Price *Money `json:"price,omitempty"`
	// The address balance for the token, in units specified by the `decimals` value for the contract.
	Balance string `json:"balance"`
	// The monetary value of the balance, if a price is available for the token.
	BalanceValue *Money `json:"balanceValue,omitempty"`
}

func (o *NativeTokenBalance) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *NativeTokenBalance) GetSymbol() string {
	if o == nil {
		return ""
	}
	return o.Symbol
}

func (o *NativeTokenBalance) GetDecimals() float64 {
	if o == nil {
		return 0.0
	}
	return o.Decimals
}

func (o *NativeTokenBalance) GetLogoURI() *string {
	if o == nil {
		return nil
	}
	return o.LogoURI
}

func (o *NativeTokenBalance) GetChainID() string {
	if o == nil {
		return ""
	}
	return o.ChainID
}

func (o *NativeTokenBalance) GetPrice() *Money {
	if o == nil {
		return nil
	}
	return o.Price
}

func (o *NativeTokenBalance) GetBalance() string {
	if o == nil {
		return ""
	}
	return o.Balance
}

func (o *NativeTokenBalance) GetBalanceValue() *Money {
	if o == nil {
		return nil
	}
	return o.BalanceValue
}
