// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// CurrencyCode - ISO 4217 currency code.
type CurrencyCode string

const (
	CurrencyCodeUsd CurrencyCode = "usd"
	CurrencyCodeEur CurrencyCode = "eur"
	CurrencyCodeAud CurrencyCode = "aud"
	CurrencyCodeCad CurrencyCode = "cad"
	CurrencyCodeChf CurrencyCode = "chf"
	CurrencyCodeClp CurrencyCode = "clp"
	CurrencyCodeCny CurrencyCode = "cny"
	CurrencyCodeCzk CurrencyCode = "czk"
	CurrencyCodeDkk CurrencyCode = "dkk"
	CurrencyCodeGbp CurrencyCode = "gbp"
	CurrencyCodeHkd CurrencyCode = "hkd"
	CurrencyCodeHuf CurrencyCode = "huf"
	CurrencyCodeJpy CurrencyCode = "jpy"
	CurrencyCodeNzd CurrencyCode = "nzd"
)

func (e CurrencyCode) ToPointer() *CurrencyCode {
	return &e
}
func (e *CurrencyCode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "usd":
		fallthrough
	case "eur":
		fallthrough
	case "aud":
		fallthrough
	case "cad":
		fallthrough
	case "chf":
		fallthrough
	case "clp":
		fallthrough
	case "cny":
		fallthrough
	case "czk":
		fallthrough
	case "dkk":
		fallthrough
	case "gbp":
		fallthrough
	case "hkd":
		fallthrough
	case "huf":
		fallthrough
	case "jpy":
		fallthrough
	case "nzd":
		*e = CurrencyCode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CurrencyCode: %v", v)
	}
}
