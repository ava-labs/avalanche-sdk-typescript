// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type OperationType string

const (
	OperationTypeTransactionExportPrimaryNetwork        OperationType = "TRANSACTION_EXPORT_PRIMARY_NETWORK"
	OperationTypeTransactionExportPrimaryNetworkStaking OperationType = "TRANSACTION_EXPORT_PRIMARY_NETWORK_STAKING"
	OperationTypeTransactionExportPrimaryNetworkSimple  OperationType = "TRANSACTION_EXPORT_PRIMARY_NETWORK_SIMPLE"
	OperationTypeTransactionExportEvm                   OperationType = "TRANSACTION_EXPORT_EVM"
)

func (e OperationType) ToPointer() *OperationType {
	return &e
}
func (e *OperationType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TRANSACTION_EXPORT_PRIMARY_NETWORK":
		fallthrough
	case "TRANSACTION_EXPORT_PRIMARY_NETWORK_STAKING":
		fallthrough
	case "TRANSACTION_EXPORT_PRIMARY_NETWORK_SIMPLE":
		fallthrough
	case "TRANSACTION_EXPORT_EVM":
		*e = OperationType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OperationType: %v", v)
	}
}
