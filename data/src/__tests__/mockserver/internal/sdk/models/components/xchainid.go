// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type XChainID string

const (
	XChainIDTwooYmbnv4eNHyqk2fjjV5nVqlDbtmNJzq5s3qs3Lo6ftnC6FByM XChainID = "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM"
	XChainIDTwoJvsBoinj9C2J33VntvzYtVjnZdN2NKiwwKjcumHuwEb5DbBrm XChainID = "2JVSBoinj9C2J33VntvzYtVJNZdN2NKiwwKjcumHUWEb5DbBrm"
	XChainIDTwopiQ2AvhCjnduiWXsSy15DtbVuwHe2cwMhYnExHsLl73BBkdbV XChainID = "2piQ2AVHCjnduiWXsSY15DtbVuwHE2cwMHYnEXHsLL73BBkdbV"
	XChainIDXChain                                               XChainID = "x-chain"
)

func (e XChainID) ToPointer() *XChainID {
	return &e
}
func (e *XChainID) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM":
		fallthrough
	case "2JVSBoinj9C2J33VntvzYtVJNZdN2NKiwwKjcumHUWEb5DbBrm":
		fallthrough
	case "2piQ2AVHCjnduiWXsSY15DtbVuwHE2cwMHYnEXHsLL73BBkdbV":
		fallthrough
	case "x-chain":
		*e = XChainID(v)
		return nil
	default:
		return fmt.Errorf("invalid value for XChainID: %v", v)
	}
}
