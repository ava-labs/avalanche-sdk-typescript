// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type RewardType string

const (
	RewardTypeValidator    RewardType = "VALIDATOR"
	RewardTypeDelegator    RewardType = "DELEGATOR"
	RewardTypeValidatorFee RewardType = "VALIDATOR_FEE"
)

func (e RewardType) ToPointer() *RewardType {
	return &e
}
func (e *RewardType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "VALIDATOR":
		fallthrough
	case "DELEGATOR":
		fallthrough
	case "VALIDATOR_FEE":
		*e = RewardType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RewardType: %v", v)
	}
}
