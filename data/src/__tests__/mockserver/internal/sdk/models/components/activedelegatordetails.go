// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type ActiveDelegatorDetailsDelegationStatus string

const (
	ActiveDelegatorDetailsDelegationStatusActive ActiveDelegatorDetailsDelegationStatus = "active"
)

func (e ActiveDelegatorDetailsDelegationStatus) ToPointer() *ActiveDelegatorDetailsDelegationStatus {
	return &e
}
func (e *ActiveDelegatorDetailsDelegationStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "active":
		*e = ActiveDelegatorDetailsDelegationStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActiveDelegatorDetailsDelegationStatus: %v", v)
	}
}

type ActiveDelegatorDetails struct {
	TxHash               string                                 `json:"txHash"`
	NodeID               string                                 `json:"nodeId"`
	RewardAddresses      []string                               `json:"rewardAddresses"`
	AmountDelegated      string                                 `json:"amountDelegated"`
	DelegationFee        string                                 `json:"delegationFee"`
	StartTimestamp       float64                                `json:"startTimestamp"`
	EndTimestamp         float64                                `json:"endTimestamp"`
	EstimatedGrossReward string                                 `json:"estimatedGrossReward"`
	EstimatedNetReward   string                                 `json:"estimatedNetReward"`
	DelegationStatus     ActiveDelegatorDetailsDelegationStatus `json:"delegationStatus"`
}

func (o *ActiveDelegatorDetails) GetTxHash() string {
	if o == nil {
		return ""
	}
	return o.TxHash
}

func (o *ActiveDelegatorDetails) GetNodeID() string {
	if o == nil {
		return ""
	}
	return o.NodeID
}

func (o *ActiveDelegatorDetails) GetRewardAddresses() []string {
	if o == nil {
		return []string{}
	}
	return o.RewardAddresses
}

func (o *ActiveDelegatorDetails) GetAmountDelegated() string {
	if o == nil {
		return ""
	}
	return o.AmountDelegated
}

func (o *ActiveDelegatorDetails) GetDelegationFee() string {
	if o == nil {
		return ""
	}
	return o.DelegationFee
}

func (o *ActiveDelegatorDetails) GetStartTimestamp() float64 {
	if o == nil {
		return 0.0
	}
	return o.StartTimestamp
}

func (o *ActiveDelegatorDetails) GetEndTimestamp() float64 {
	if o == nil {
		return 0.0
	}
	return o.EndTimestamp
}

func (o *ActiveDelegatorDetails) GetEstimatedGrossReward() string {
	if o == nil {
		return ""
	}
	return o.EstimatedGrossReward
}

func (o *ActiveDelegatorDetails) GetEstimatedNetReward() string {
	if o == nil {
		return ""
	}
	return o.EstimatedNetReward
}

func (o *ActiveDelegatorDetails) GetDelegationStatus() ActiveDelegatorDetailsDelegationStatus {
	if o == nil {
		return ActiveDelegatorDetailsDelegationStatus("")
	}
	return o.DelegationStatus
}
