// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// XChainTransactionType - Type of transaction.
type XChainTransactionType string

const (
	XChainTransactionTypeBaseTx        XChainTransactionType = "BaseTx"
	XChainTransactionTypeCreateAssetTx XChainTransactionType = "CreateAssetTx"
	XChainTransactionTypeOperationTx   XChainTransactionType = "OperationTx"
	XChainTransactionTypeImportTx      XChainTransactionType = "ImportTx"
	XChainTransactionTypeExportTx      XChainTransactionType = "ExportTx"
	XChainTransactionTypeUnknown       XChainTransactionType = "UNKNOWN"
)

func (e XChainTransactionType) ToPointer() *XChainTransactionType {
	return &e
}
func (e *XChainTransactionType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BaseTx":
		fallthrough
	case "CreateAssetTx":
		fallthrough
	case "OperationTx":
		fallthrough
	case "ImportTx":
		fallthrough
	case "ExportTx":
		fallthrough
	case "UNKNOWN":
		*e = XChainTransactionType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for XChainTransactionType: %v", v)
	}
}
