// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type OperationStatus string

const (
	OperationStatusRunning              OperationStatus = "RUNNING"
	OperationStatusCompleted            OperationStatus = "COMPLETED"
	OperationStatusCompletedWithWarning OperationStatus = "COMPLETED_WITH_WARNING"
	OperationStatusFailed               OperationStatus = "FAILED"
)

func (e OperationStatus) ToPointer() *OperationStatus {
	return &e
}
func (e *OperationStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RUNNING":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "COMPLETED_WITH_WARNING":
		fallthrough
	case "FAILED":
		*e = OperationStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OperationStatus: %v", v)
	}
}
