// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type ValidationStatusType string

const (
	ValidationStatusTypeCompleted ValidationStatusType = "completed"
	ValidationStatusTypeActive    ValidationStatusType = "active"
	ValidationStatusTypePending   ValidationStatusType = "pending"
	ValidationStatusTypeRemoved   ValidationStatusType = "removed"
)

func (e ValidationStatusType) ToPointer() *ValidationStatusType {
	return &e
}
func (e *ValidationStatusType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "completed":
		fallthrough
	case "active":
		fallthrough
	case "pending":
		fallthrough
	case "removed":
		*e = ValidationStatusType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ValidationStatusType: %v", v)
	}
}
