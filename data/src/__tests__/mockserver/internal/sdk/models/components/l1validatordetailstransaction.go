// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type L1ValidatorDetailsTransactionBlsCredentials struct {
}

type L1ValidatorDetailsTransaction struct {
	// Unique L1 validation ID used network-wide to identify L1 validation until its weight is reduced to 0 i.e. removed.
	ValidationID string `json:"validationId"`
	// Unique L1 validation ID used network-wide to identify L1 validation until its weight is reduced to 0 i.e. removed. In hex format
	ValidationIDHex string `json:"validationIdHex"`
	NodeID          string `json:"nodeId"`
	SubnetID        string `json:"subnetId"`
	// Weight of the L1 validator used while sampling validators within the L1. A zero-weight L1 validator means it has been removed from the L1, and the validationID is no longer valid
	Weight float64 `json:"weight"`
	// Remaining L1 validator balance in nAVAX until inactive. It can rejoin L1 sampling by increasing balance with IncreaseL1ValidatorBalanceTx
	RemainingBalance float64 `json:"remainingBalance"`
	// The increase in L1 validator balance (nAVAX) in the current transaction. When the balance is returned after the L1 validator is disabled or removed, this value is negative
	BalanceChange  *float64                                     `json:"balanceChange,omitempty"`
	BlsCredentials *L1ValidatorDetailsTransactionBlsCredentials `json:"blsCredentials,omitempty"`
}

func (o *L1ValidatorDetailsTransaction) GetValidationID() string {
	if o == nil {
		return ""
	}
	return o.ValidationID
}

func (o *L1ValidatorDetailsTransaction) GetValidationIDHex() string {
	if o == nil {
		return ""
	}
	return o.ValidationIDHex
}

func (o *L1ValidatorDetailsTransaction) GetNodeID() string {
	if o == nil {
		return ""
	}
	return o.NodeID
}

func (o *L1ValidatorDetailsTransaction) GetSubnetID() string {
	if o == nil {
		return ""
	}
	return o.SubnetID
}

func (o *L1ValidatorDetailsTransaction) GetWeight() float64 {
	if o == nil {
		return 0.0
	}
	return o.Weight
}

func (o *L1ValidatorDetailsTransaction) GetRemainingBalance() float64 {
	if o == nil {
		return 0.0
	}
	return o.RemainingBalance
}

func (o *L1ValidatorDetailsTransaction) GetBalanceChange() *float64 {
	if o == nil {
		return nil
	}
	return o.BalanceChange
}

func (o *L1ValidatorDetailsTransaction) GetBlsCredentials() *L1ValidatorDetailsTransactionBlsCredentials {
	if o == nil {
		return nil
	}
	return o.BlsCredentials
}
