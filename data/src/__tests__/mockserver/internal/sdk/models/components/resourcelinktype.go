// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type ResourceLinkType string

const (
	ResourceLinkTypeBlog          ResourceLinkType = "Blog"
	ResourceLinkTypeCoinGecko     ResourceLinkType = "CoinGecko"
	ResourceLinkTypeCoinMarketCap ResourceLinkType = "CoinMarketCap"
	ResourceLinkTypeDiscord       ResourceLinkType = "Discord"
	ResourceLinkTypeDocumentation ResourceLinkType = "Documentation"
	ResourceLinkTypeFacebook      ResourceLinkType = "Facebook"
	ResourceLinkTypeGithub        ResourceLinkType = "Github"
	ResourceLinkTypeInstagram     ResourceLinkType = "Instagram"
	ResourceLinkTypeLinkedIn      ResourceLinkType = "LinkedIn"
	ResourceLinkTypeMedium        ResourceLinkType = "Medium"
	ResourceLinkTypeReddit        ResourceLinkType = "Reddit"
	ResourceLinkTypeSupport       ResourceLinkType = "Support"
	ResourceLinkTypeTelegram      ResourceLinkType = "Telegram"
	ResourceLinkTypeTikTok        ResourceLinkType = "TikTok"
	ResourceLinkTypeTwitter       ResourceLinkType = "Twitter"
	ResourceLinkTypeWebsite       ResourceLinkType = "Website"
	ResourceLinkTypeWhitepaper    ResourceLinkType = "Whitepaper"
	ResourceLinkTypeYoutube       ResourceLinkType = "Youtube"
)

func (e ResourceLinkType) ToPointer() *ResourceLinkType {
	return &e
}
func (e *ResourceLinkType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Blog":
		fallthrough
	case "CoinGecko":
		fallthrough
	case "CoinMarketCap":
		fallthrough
	case "Discord":
		fallthrough
	case "Documentation":
		fallthrough
	case "Facebook":
		fallthrough
	case "Github":
		fallthrough
	case "Instagram":
		fallthrough
	case "LinkedIn":
		fallthrough
	case "Medium":
		fallthrough
	case "Reddit":
		fallthrough
	case "Support":
		fallthrough
	case "Telegram":
		fallthrough
	case "TikTok":
		fallthrough
	case "Twitter":
		fallthrough
	case "Website":
		fallthrough
	case "Whitepaper":
		fallthrough
	case "Youtube":
		*e = ResourceLinkType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ResourceLinkType: %v", v)
	}
}
