// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// HealthIndicatorResultDtoStatus - Status of the health indicator.
type HealthIndicatorResultDtoStatus string

const (
	HealthIndicatorResultDtoStatusUp   HealthIndicatorResultDtoStatus = "up"
	HealthIndicatorResultDtoStatusDown HealthIndicatorResultDtoStatus = "down"
)

func (e HealthIndicatorResultDtoStatus) ToPointer() *HealthIndicatorResultDtoStatus {
	return &e
}
func (e *HealthIndicatorResultDtoStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "up":
		fallthrough
	case "down":
		*e = HealthIndicatorResultDtoStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for HealthIndicatorResultDtoStatus: %v", v)
	}
}

type HealthIndicatorResultDto struct {
	// Status of the health indicator.
	Status *HealthIndicatorResultDtoStatus `json:"status,omitempty"`
}

func (o *HealthIndicatorResultDto) GetStatus() *HealthIndicatorResultDtoStatus {
	if o == nil {
		return nil
	}
	return o.Status
}
