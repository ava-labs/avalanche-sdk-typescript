// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// XChainNonLinearTransactionChainFormat - Represents chain format this transaction is included in.
type XChainNonLinearTransactionChainFormat string

const (
	XChainNonLinearTransactionChainFormatNonLinear XChainNonLinearTransactionChainFormat = "non-linear"
	XChainNonLinearTransactionChainFormatLinear    XChainNonLinearTransactionChainFormat = "linear"
)

func (e XChainNonLinearTransactionChainFormat) ToPointer() *XChainNonLinearTransactionChainFormat {
	return &e
}
func (e *XChainNonLinearTransactionChainFormat) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "non-linear":
		fallthrough
	case "linear":
		*e = XChainNonLinearTransactionChainFormat(v)
		return nil
	default:
		return fmt.Errorf("invalid value for XChainNonLinearTransactionChainFormat: %v", v)
	}
}

type XChainNonLinearTransaction struct {
	// Unique ID for this transaction.
	TxHash string `json:"txHash"`
	// Represents chain format this transaction is included in.
	ChainFormat XChainNonLinearTransactionChainFormat `json:"chainFormat"`
	// Latest timestamp in seconds this transaction was accepted out of the same transaction accepted in other vertices.
	Timestamp float64 `json:"timestamp"`
	// Type of transaction.
	TxType XChainTransactionType `json:"txType"`
	// Hex encoded memo bytes for this transaction.
	Memo          string `json:"memo"`
	ConsumedUtxos []Utxo `json:"consumedUtxos"`
	EmittedUtxos  []Utxo `json:"emittedUtxos"`
	// Assets unlocked by inputs of this transaction.
	AmountUnlocked []AssetAmount `json:"amountUnlocked"`
	// Assets created by outputs of this transaction.
	AmountCreated []AssetAmount `json:"amountCreated"`
	// Source chain for an atomic transaction.
	SourceChain *string `json:"sourceChain,omitempty"`
	// Destination chain for an atomic transaction.
	DestinationChain *string `json:"destinationChain,omitempty"`
	// AssetAmount details of the asset created in CreateAssetTx
	AssetCreated *XChainAssetDetails `json:"assetCreated,omitempty"`
	// A transaction on X-Chain can be accepted over multiple vertices.
	Vertices []TransactionVertexDetail `json:"vertices"`
}

func (o *XChainNonLinearTransaction) GetTxHash() string {
	if o == nil {
		return ""
	}
	return o.TxHash
}

func (o *XChainNonLinearTransaction) GetChainFormat() XChainNonLinearTransactionChainFormat {
	if o == nil {
		return XChainNonLinearTransactionChainFormat("")
	}
	return o.ChainFormat
}

func (o *XChainNonLinearTransaction) GetTimestamp() float64 {
	if o == nil {
		return 0.0
	}
	return o.Timestamp
}

func (o *XChainNonLinearTransaction) GetTxType() XChainTransactionType {
	if o == nil {
		return XChainTransactionType("")
	}
	return o.TxType
}

func (o *XChainNonLinearTransaction) GetMemo() string {
	if o == nil {
		return ""
	}
	return o.Memo
}

func (o *XChainNonLinearTransaction) GetConsumedUtxos() []Utxo {
	if o == nil {
		return []Utxo{}
	}
	return o.ConsumedUtxos
}

func (o *XChainNonLinearTransaction) GetEmittedUtxos() []Utxo {
	if o == nil {
		return []Utxo{}
	}
	return o.EmittedUtxos
}

func (o *XChainNonLinearTransaction) GetAmountUnlocked() []AssetAmount {
	if o == nil {
		return []AssetAmount{}
	}
	return o.AmountUnlocked
}

func (o *XChainNonLinearTransaction) GetAmountCreated() []AssetAmount {
	if o == nil {
		return []AssetAmount{}
	}
	return o.AmountCreated
}

func (o *XChainNonLinearTransaction) GetSourceChain() *string {
	if o == nil {
		return nil
	}
	return o.SourceChain
}

func (o *XChainNonLinearTransaction) GetDestinationChain() *string {
	if o == nil {
		return nil
	}
	return o.DestinationChain
}

func (o *XChainNonLinearTransaction) GetAssetCreated() *XChainAssetDetails {
	if o == nil {
		return nil
	}
	return o.AssetCreated
}

func (o *XChainNonLinearTransaction) GetVertices() []TransactionVertexDetail {
	if o == nil {
		return []TransactionVertexDetail{}
	}
	return o.Vertices
}
