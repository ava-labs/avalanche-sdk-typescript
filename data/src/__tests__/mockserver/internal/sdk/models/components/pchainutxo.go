// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type PChainUtxo struct {
	// Addresses that are eligible to sign the consumption of this output.
	Addresses []string    `json:"addresses"`
	Asset     AssetAmount `json:"asset"`
	// Blockchain ID on which this output is consumed on.
	ConsumedOnChainID string `json:"consumedOnChainId"`
	// Transaction ID that consumed this output.
	ConsumingTxHash *string `json:"consumingTxHash,omitempty"`
	// Blockchain ID on which this output is created on.
	CreatedOnChainID string `json:"createdOnChainId"`
	// UTXO ID for this output.
	UtxoID string `json:"utxoId"`
	// Deprecated: This will be removed in a future release, please migrate away from it as soon as possible.
	Amount string `json:"amount"`
	// Deprecated: This will be removed in a future release, please migrate away from it as soon as possible.
	AssetID        string  `json:"assetId"`
	BlockNumber    string  `json:"blockNumber"`
	BlockTimestamp float64 `json:"blockTimestamp"`
	// Block height in which the transaction consuming this UTXO was included
	ConsumingBlockNumber *string `json:"consumingBlockNumber,omitempty"`
	// Timestamp in seconds at which this UTXO is used in a consuming transaction
	ConsumingBlockTimestamp *float64 `json:"consumingBlockTimestamp,omitempty"`
	// Timestamp in seconds after which this UTXO can be consumed
	PlatformLocktime *float64 `json:"platformLocktime,omitempty"`
	// The index of the UTXO in the transaction
	OutputIndex float64     `json:"outputIndex"`
	RewardType  *RewardType `json:"rewardType,omitempty"`
	// Timestamp in seconds before which a UTXO can only be used for staking transactions. After stakeable locktime, a UTXO can be used for anything
	StakeableLocktime *float64 `json:"stakeableLocktime,omitempty"`
	Staked            *bool    `json:"staked,omitempty"`
	// The minimum number of signatures required to spend this UTXO
	Threshold *float64 `json:"threshold,omitempty"`
	// The hash of the transaction that created this UTXO
	TxHash string `json:"txHash"`
	// Timestamp in seconds after which the staked UTXO will be unlocked.
	UtxoEndTimestamp *float64 `json:"utxoEndTimestamp,omitempty"`
	// Timestamp in seconds at which the staked UTXO was locked.
	UtxoStartTimestamp *float64 `json:"utxoStartTimestamp,omitempty"`
	// Indicates whether the UTXO is staked or transferable
	UtxoType UtxoType `json:"utxoType"`
}

func (o *PChainUtxo) GetAddresses() []string {
	if o == nil {
		return []string{}
	}
	return o.Addresses
}

func (o *PChainUtxo) GetAsset() AssetAmount {
	if o == nil {
		return AssetAmount{}
	}
	return o.Asset
}

func (o *PChainUtxo) GetConsumedOnChainID() string {
	if o == nil {
		return ""
	}
	return o.ConsumedOnChainID
}

func (o *PChainUtxo) GetConsumingTxHash() *string {
	if o == nil {
		return nil
	}
	return o.ConsumingTxHash
}

func (o *PChainUtxo) GetCreatedOnChainID() string {
	if o == nil {
		return ""
	}
	return o.CreatedOnChainID
}

func (o *PChainUtxo) GetUtxoID() string {
	if o == nil {
		return ""
	}
	return o.UtxoID
}

func (o *PChainUtxo) GetAmount() string {
	if o == nil {
		return ""
	}
	return o.Amount
}

func (o *PChainUtxo) GetAssetID() string {
	if o == nil {
		return ""
	}
	return o.AssetID
}

func (o *PChainUtxo) GetBlockNumber() string {
	if o == nil {
		return ""
	}
	return o.BlockNumber
}

func (o *PChainUtxo) GetBlockTimestamp() float64 {
	if o == nil {
		return 0.0
	}
	return o.BlockTimestamp
}

func (o *PChainUtxo) GetConsumingBlockNumber() *string {
	if o == nil {
		return nil
	}
	return o.ConsumingBlockNumber
}

func (o *PChainUtxo) GetConsumingBlockTimestamp() *float64 {
	if o == nil {
		return nil
	}
	return o.ConsumingBlockTimestamp
}

func (o *PChainUtxo) GetPlatformLocktime() *float64 {
	if o == nil {
		return nil
	}
	return o.PlatformLocktime
}

func (o *PChainUtxo) GetOutputIndex() float64 {
	if o == nil {
		return 0.0
	}
	return o.OutputIndex
}

func (o *PChainUtxo) GetRewardType() *RewardType {
	if o == nil {
		return nil
	}
	return o.RewardType
}

func (o *PChainUtxo) GetStakeableLocktime() *float64 {
	if o == nil {
		return nil
	}
	return o.StakeableLocktime
}

func (o *PChainUtxo) GetStaked() *bool {
	if o == nil {
		return nil
	}
	return o.Staked
}

func (o *PChainUtxo) GetThreshold() *float64 {
	if o == nil {
		return nil
	}
	return o.Threshold
}

func (o *PChainUtxo) GetTxHash() string {
	if o == nil {
		return ""
	}
	return o.TxHash
}

func (o *PChainUtxo) GetUtxoEndTimestamp() *float64 {
	if o == nil {
		return nil
	}
	return o.UtxoEndTimestamp
}

func (o *PChainUtxo) GetUtxoStartTimestamp() *float64 {
	if o == nil {
		return nil
	}
	return o.UtxoStartTimestamp
}

func (o *PChainUtxo) GetUtxoType() UtxoType {
	if o == nil {
		return UtxoType("")
	}
	return o.UtxoType
}
