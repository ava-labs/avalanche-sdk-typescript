// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"errors"
	"fmt"
	"mockserver/internal/sdk/utils"
)

type MetadataType string

const (
	MetadataTypeTransactionExportMetadata MetadataType = "TransactionExportMetadata"
)

type Metadata struct {
	TransactionExportMetadata *TransactionExportMetadata `queryParam:"inline"`

	Type MetadataType
}

func CreateMetadataTransactionExportMetadata(transactionExportMetadata TransactionExportMetadata) Metadata {
	typ := MetadataTypeTransactionExportMetadata

	return Metadata{
		TransactionExportMetadata: &transactionExportMetadata,
		Type:                      typ,
	}
}

func (u *Metadata) UnmarshalJSON(data []byte) error {

	var transactionExportMetadata TransactionExportMetadata = TransactionExportMetadata{}
	if err := utils.UnmarshalJSON(data, &transactionExportMetadata, "", true, true); err == nil {
		u.TransactionExportMetadata = &transactionExportMetadata
		u.Type = MetadataTypeTransactionExportMetadata
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for Metadata", string(data))
}

func (u Metadata) MarshalJSON() ([]byte, error) {
	if u.TransactionExportMetadata != nil {
		return utils.MarshalJSON(u.TransactionExportMetadata, "", true)
	}

	return nil, errors.New("could not marshal union type Metadata: all fields are null")
}

type OperationStatusResponse struct {
	OperationID        string          `json:"operationId"`
	OperationType      OperationType   `json:"operationType"`
	OperationStatus    OperationStatus `json:"operationStatus"`
	Message            *string         `json:"message,omitempty"`
	Metadata           *Metadata       `json:"metadata,omitempty"`
	CreatedAtTimestamp float64         `json:"createdAtTimestamp"`
	UpdatedAtTimestamp float64         `json:"updatedAtTimestamp"`
}

func (o *OperationStatusResponse) GetOperationID() string {
	if o == nil {
		return ""
	}
	return o.OperationID
}

func (o *OperationStatusResponse) GetOperationType() OperationType {
	if o == nil {
		return OperationType("")
	}
	return o.OperationType
}

func (o *OperationStatusResponse) GetOperationStatus() OperationStatus {
	if o == nil {
		return OperationStatus("")
	}
	return o.OperationStatus
}

func (o *OperationStatusResponse) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *OperationStatusResponse) GetMetadata() *Metadata {
	if o == nil {
		return nil
	}
	return o.Metadata
}

func (o *OperationStatusResponse) GetCreatedAtTimestamp() float64 {
	if o == nil {
		return 0.0
	}
	return o.CreatedAtTimestamp
}

func (o *OperationStatusResponse) GetUpdatedAtTimestamp() float64 {
	if o == nil {
		return 0.0
	}
	return o.UpdatedAtTimestamp
}
