// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type XChainAssetDetails struct {
	// Unique ID for an asset.
	AssetID string `json:"assetId"`
	// Name of this asset.
	Name string `json:"name"`
	// Symbol for this asset (max 4 characters).
	Symbol string `json:"symbol"`
	// Denomination of this asset to represent fungibility.
	Denomination float64 `json:"denomination"`
	// Type of asset like SECP256K1 or NFT.
	Type PrimaryNetworkAssetType `json:"type"`
	// Timestamp in seconds this asset was created on.
	CreatedAtTimestamp float64 `json:"createdAtTimestamp"`
	// Cap represents if an asset is a variable or fixed cap asset.
	Cap PrimaryNetworkAssetCap `json:"cap"`
}

func (o *XChainAssetDetails) GetAssetID() string {
	if o == nil {
		return ""
	}
	return o.AssetID
}

func (o *XChainAssetDetails) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *XChainAssetDetails) GetSymbol() string {
	if o == nil {
		return ""
	}
	return o.Symbol
}

func (o *XChainAssetDetails) GetDenomination() float64 {
	if o == nil {
		return 0.0
	}
	return o.Denomination
}

func (o *XChainAssetDetails) GetType() PrimaryNetworkAssetType {
	if o == nil {
		return PrimaryNetworkAssetType("")
	}
	return o.Type
}

func (o *XChainAssetDetails) GetCreatedAtTimestamp() float64 {
	if o == nil {
		return 0.0
	}
	return o.CreatedAtTimestamp
}

func (o *XChainAssetDetails) GetCap() PrimaryNetworkAssetCap {
	if o == nil {
		return PrimaryNetworkAssetCap("")
	}
	return o.Cap
}
