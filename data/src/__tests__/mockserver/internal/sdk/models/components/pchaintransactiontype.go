// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type PChainTransactionType string

const (
	PChainTransactionTypeAddValidatorTx               PChainTransactionType = "AddValidatorTx"
	PChainTransactionTypeAddSubnetValidatorTx         PChainTransactionType = "AddSubnetValidatorTx"
	PChainTransactionTypeAddDelegatorTx               PChainTransactionType = "AddDelegatorTx"
	PChainTransactionTypeCreateChainTx                PChainTransactionType = "CreateChainTx"
	PChainTransactionTypeCreateSubnetTx               PChainTransactionType = "CreateSubnetTx"
	PChainTransactionTypeImportTx                     PChainTransactionType = "ImportTx"
	PChainTransactionTypeExportTx                     PChainTransactionType = "ExportTx"
	PChainTransactionTypeAdvanceTimeTx                PChainTransactionType = "AdvanceTimeTx"
	PChainTransactionTypeRewardValidatorTx            PChainTransactionType = "RewardValidatorTx"
	PChainTransactionTypeRemoveSubnetValidatorTx      PChainTransactionType = "RemoveSubnetValidatorTx"
	PChainTransactionTypeTransformSubnetTx            PChainTransactionType = "TransformSubnetTx"
	PChainTransactionTypeAddPermissionlessValidatorTx PChainTransactionType = "AddPermissionlessValidatorTx"
	PChainTransactionTypeAddPermissionlessDelegatorTx PChainTransactionType = "AddPermissionlessDelegatorTx"
	PChainTransactionTypeBaseTx                       PChainTransactionType = "BaseTx"
	PChainTransactionTypeTransferSubnetOwnershipTx    PChainTransactionType = "TransferSubnetOwnershipTx"
	PChainTransactionTypeConvertSubnetToL1Tx          PChainTransactionType = "ConvertSubnetToL1Tx"
	PChainTransactionTypeRegisterL1ValidatorTx        PChainTransactionType = "RegisterL1ValidatorTx"
	PChainTransactionTypeSetL1ValidatorWeightTx       PChainTransactionType = "SetL1ValidatorWeightTx"
	PChainTransactionTypeDisableL1ValidatorTx         PChainTransactionType = "DisableL1ValidatorTx"
	PChainTransactionTypeIncreaseL1ValidatorBalanceTx PChainTransactionType = "IncreaseL1ValidatorBalanceTx"
	PChainTransactionTypeUnknown                      PChainTransactionType = "UNKNOWN"
)

func (e PChainTransactionType) ToPointer() *PChainTransactionType {
	return &e
}
func (e *PChainTransactionType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AddValidatorTx":
		fallthrough
	case "AddSubnetValidatorTx":
		fallthrough
	case "AddDelegatorTx":
		fallthrough
	case "CreateChainTx":
		fallthrough
	case "CreateSubnetTx":
		fallthrough
	case "ImportTx":
		fallthrough
	case "ExportTx":
		fallthrough
	case "AdvanceTimeTx":
		fallthrough
	case "RewardValidatorTx":
		fallthrough
	case "RemoveSubnetValidatorTx":
		fallthrough
	case "TransformSubnetTx":
		fallthrough
	case "AddPermissionlessValidatorTx":
		fallthrough
	case "AddPermissionlessDelegatorTx":
		fallthrough
	case "BaseTx":
		fallthrough
	case "TransferSubnetOwnershipTx":
		fallthrough
	case "ConvertSubnetToL1Tx":
		fallthrough
	case "RegisterL1ValidatorTx":
		fallthrough
	case "SetL1ValidatorWeightTx":
		fallthrough
	case "DisableL1ValidatorTx":
		fallthrough
	case "IncreaseL1ValidatorBalanceTx":
		fallthrough
	case "UNKNOWN":
		*e = PChainTransactionType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PChainTransactionType: %v", v)
	}
}
