// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"errors"
	"fmt"
	"mockserver/internal/sdk/utils"
)

type CollectibleBalanceType string

const (
	CollectibleBalanceTypeErc721TokenBalance  CollectibleBalanceType = "Erc721TokenBalance"
	CollectibleBalanceTypeErc1155TokenBalance CollectibleBalanceType = "Erc1155TokenBalance"
)

type CollectibleBalance struct {
	Erc721TokenBalance  *Erc721TokenBalance  `queryParam:"inline"`
	Erc1155TokenBalance *Erc1155TokenBalance `queryParam:"inline"`

	Type CollectibleBalanceType
}

func CreateCollectibleBalanceErc721TokenBalance(erc721TokenBalance Erc721TokenBalance) CollectibleBalance {
	typ := CollectibleBalanceTypeErc721TokenBalance

	return CollectibleBalance{
		Erc721TokenBalance: &erc721TokenBalance,
		Type:               typ,
	}
}

func CreateCollectibleBalanceErc1155TokenBalance(erc1155TokenBalance Erc1155TokenBalance) CollectibleBalance {
	typ := CollectibleBalanceTypeErc1155TokenBalance

	return CollectibleBalance{
		Erc1155TokenBalance: &erc1155TokenBalance,
		Type:                typ,
	}
}

func (u *CollectibleBalance) UnmarshalJSON(data []byte) error {

	var erc1155TokenBalance Erc1155TokenBalance = Erc1155TokenBalance{}
	if err := utils.UnmarshalJSON(data, &erc1155TokenBalance, "", true, true); err == nil {
		u.Erc1155TokenBalance = &erc1155TokenBalance
		u.Type = CollectibleBalanceTypeErc1155TokenBalance
		return nil
	}

	var erc721TokenBalance Erc721TokenBalance = Erc721TokenBalance{}
	if err := utils.UnmarshalJSON(data, &erc721TokenBalance, "", true, true); err == nil {
		u.Erc721TokenBalance = &erc721TokenBalance
		u.Type = CollectibleBalanceTypeErc721TokenBalance
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for CollectibleBalance", string(data))
}

func (u CollectibleBalance) MarshalJSON() ([]byte, error) {
	if u.Erc721TokenBalance != nil {
		return utils.MarshalJSON(u.Erc721TokenBalance, "", true)
	}

	if u.Erc1155TokenBalance != nil {
		return utils.MarshalJSON(u.Erc1155TokenBalance, "", true)
	}

	return nil, errors.New("could not marshal union type CollectibleBalance: all fields are null")
}

type ListCollectibleBalancesResponse struct {
	// A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted or empty, there are no subsequent pages.
	NextPageToken *string `json:"nextPageToken,omitempty"`
	// The list of ERC-721 and ERC-1155 token balances for the address.
	CollectibleBalances []CollectibleBalance `json:"collectibleBalances"`
}

func (o *ListCollectibleBalancesResponse) GetNextPageToken() *string {
	if o == nil {
		return nil
	}
	return o.NextPageToken
}

func (o *ListCollectibleBalancesResponse) GetCollectibleBalances() []CollectibleBalance {
	if o == nil {
		return []CollectibleBalance{}
	}
	return o.CollectibleBalances
}
