// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type AssetWithPriceInfo struct {
	// Unique ID for an asset.
	AssetID string `json:"assetId"`
	// Name of this asset.
	Name string `json:"name"`
	// Symbol for this asset (max 4 characters).
	Symbol string `json:"symbol"`
	// Denomination of this asset to represent fungibility.
	Denomination float64 `json:"denomination"`
	// Type of asset like SECP256K1 or NFT.
	Type PrimaryNetworkAssetType `json:"type"`
	// Amount of the asset.
	Amount string `json:"amount"`
	// The historical asset price at the time the reward was granted, if available. Note, this is only provided if the reward occured more than 24 hours ago.
	HistoricalPrice *Money `json:"historicalPrice,omitempty"`
}

func (o *AssetWithPriceInfo) GetAssetID() string {
	if o == nil {
		return ""
	}
	return o.AssetID
}

func (o *AssetWithPriceInfo) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *AssetWithPriceInfo) GetSymbol() string {
	if o == nil {
		return ""
	}
	return o.Symbol
}

func (o *AssetWithPriceInfo) GetDenomination() float64 {
	if o == nil {
		return 0.0
	}
	return o.Denomination
}

func (o *AssetWithPriceInfo) GetType() PrimaryNetworkAssetType {
	if o == nil {
		return PrimaryNetworkAssetType("")
	}
	return o.Type
}

func (o *AssetWithPriceInfo) GetAmount() string {
	if o == nil {
		return ""
	}
	return o.Amount
}

func (o *AssetWithPriceInfo) GetHistoricalPrice() *Money {
	if o == nil {
		return nil
	}
	return o.HistoricalPrice
}
