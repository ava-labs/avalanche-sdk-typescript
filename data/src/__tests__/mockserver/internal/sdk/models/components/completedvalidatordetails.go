// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type CompletedValidatorDetailsValidationStatus string

const (
	CompletedValidatorDetailsValidationStatusCompleted CompletedValidatorDetailsValidationStatus = "completed"
)

func (e CompletedValidatorDetailsValidationStatus) ToPointer() *CompletedValidatorDetailsValidationStatus {
	return &e
}
func (e *CompletedValidatorDetailsValidationStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "completed":
		*e = CompletedValidatorDetailsValidationStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CompletedValidatorDetailsValidationStatus: %v", v)
	}
}

type CompletedValidatorDetails struct {
	TxHash       string `json:"txHash"`
	NodeID       string `json:"nodeId"`
	SubnetID     string `json:"subnetId"`
	AmountStaked string `json:"amountStaked"`
	// The percentage of total estimated delegator rewards allocated to validator nodes for supporting delegations.
	DelegationFee  *string `json:"delegationFee,omitempty"`
	StartTimestamp float64 `json:"startTimestamp"`
	EndTimestamp   float64 `json:"endTimestamp"`
	// Present for AddPermissionlessValidatorTx
	BlsCredentials   *BlsCredentials                           `json:"blsCredentials,omitempty"`
	DelegatorCount   float64                                   `json:"delegatorCount"`
	AmountDelegated  *string                                   `json:"amountDelegated,omitempty"`
	Rewards          Rewards                                   `json:"rewards"`
	ValidationStatus CompletedValidatorDetailsValidationStatus `json:"validationStatus"`
}

func (o *CompletedValidatorDetails) GetTxHash() string {
	if o == nil {
		return ""
	}
	return o.TxHash
}

func (o *CompletedValidatorDetails) GetNodeID() string {
	if o == nil {
		return ""
	}
	return o.NodeID
}

func (o *CompletedValidatorDetails) GetSubnetID() string {
	if o == nil {
		return ""
	}
	return o.SubnetID
}

func (o *CompletedValidatorDetails) GetAmountStaked() string {
	if o == nil {
		return ""
	}
	return o.AmountStaked
}

func (o *CompletedValidatorDetails) GetDelegationFee() *string {
	if o == nil {
		return nil
	}
	return o.DelegationFee
}

func (o *CompletedValidatorDetails) GetStartTimestamp() float64 {
	if o == nil {
		return 0.0
	}
	return o.StartTimestamp
}

func (o *CompletedValidatorDetails) GetEndTimestamp() float64 {
	if o == nil {
		return 0.0
	}
	return o.EndTimestamp
}

func (o *CompletedValidatorDetails) GetBlsCredentials() *BlsCredentials {
	if o == nil {
		return nil
	}
	return o.BlsCredentials
}

func (o *CompletedValidatorDetails) GetDelegatorCount() float64 {
	if o == nil {
		return 0.0
	}
	return o.DelegatorCount
}

func (o *CompletedValidatorDetails) GetAmountDelegated() *string {
	if o == nil {
		return nil
	}
	return o.AmountDelegated
}

func (o *CompletedValidatorDetails) GetRewards() Rewards {
	if o == nil {
		return Rewards{}
	}
	return o.Rewards
}

func (o *CompletedValidatorDetails) GetValidationStatus() CompletedValidatorDetailsValidationStatus {
	if o == nil {
		return CompletedValidatorDetailsValidationStatus("")
	}
	return o.ValidationStatus
}
