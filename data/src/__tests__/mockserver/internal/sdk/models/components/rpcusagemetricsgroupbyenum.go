// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type RPCUsageMetricsGroupByEnum string

const (
	RPCUsageMetricsGroupByEnumRPCMethod     RPCUsageMetricsGroupByEnum = "rpcMethod"
	RPCUsageMetricsGroupByEnumResponseCode  RPCUsageMetricsGroupByEnum = "responseCode"
	RPCUsageMetricsGroupByEnumRlBypassToken RPCUsageMetricsGroupByEnum = "rlBypassToken"
)

func (e RPCUsageMetricsGroupByEnum) ToPointer() *RPCUsageMetricsGroupByEnum {
	return &e
}
func (e *RPCUsageMetricsGroupByEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "rpcMethod":
		fallthrough
	case "responseCode":
		fallthrough
	case "rlBypassToken":
		*e = RPCUsageMetricsGroupByEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RPCUsageMetricsGroupByEnum: %v", v)
	}
}
