// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type GetDeploymentTransactionGlobals struct {
	// A supported EVM chain id, chain alias, or blockchain id.
	ChainID *string `pathParam:"style=simple,explode=false,name=chainId"`
}

func (o *GetDeploymentTransactionGlobals) GetChainID() *string {
	if o == nil {
		return nil
	}
	return o.ChainID
}

type GetDeploymentTransactionRequest struct {
	// A supported evm chain id or blockchain id. Use the `/chains` endpoint to get a list of supported chain ids.
	ChainID *string `pathParam:"style=simple,explode=false,name=chainId"`
	// Contract address on the relevant chain.
	Address string `pathParam:"style=simple,explode=false,name=address"`
	// The currency that return values should use. Defaults to USD.
	Currency *components.CurrencyCode `queryParam:"style=form,explode=true,name=currency"`
}

func (o *GetDeploymentTransactionRequest) GetChainID() *string {
	if o == nil {
		return nil
	}
	return o.ChainID
}

func (o *GetDeploymentTransactionRequest) GetAddress() string {
	if o == nil {
		return ""
	}
	return o.Address
}

func (o *GetDeploymentTransactionRequest) GetCurrency() *components.CurrencyCode {
	if o == nil {
		return nil
	}
	return o.Currency
}

type GetDeploymentTransactionResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successful response
	GetTransactionResponse *components.GetTransactionResponse
}

func (o *GetDeploymentTransactionResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetDeploymentTransactionResponse) GetGetTransactionResponse() *components.GetTransactionResponse {
	if o == nil {
		return nil
	}
	return o.GetTransactionResponse
}
