// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
	"mockserver/internal/sdk/utils"
)

type ListTeleporterMessagesRequest struct {
	// A page token, received from a previous list call. Provide this to retrieve the subsequent page.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.
	PageSize *int64 `default:"10" queryParam:"style=form,explode=true,name=pageSize"`
	// The base58 encoded blockchain ID or evm chain ID of the source chain that the teleporter message was sent from.
	SourceBlockchainID *string `queryParam:"style=form,explode=true,name=sourceBlockchainId"`
	// The base58 encoded blockchain ID or evm chain ID of the destination chain that the teleporter message was sent to.
	DestinationBlockchainID *string `queryParam:"style=form,explode=true,name=destinationBlockchainId"`
	// The base58 encoded blockchain ID of either source or destination chain that one teleporter message interacts with.
	BlockchainID *string `queryParam:"style=form,explode=true,name=blockchainId"`
	// The address of the recipient of the teleporter message.
	To *string `queryParam:"style=form,explode=true,name=to"`
	// The address of the sender of the teleporter message.
	From *string `queryParam:"style=form,explode=true,name=from"`
	// Either mainnet or testnet/fuji.
	Network *components.Network `queryParam:"style=form,explode=true,name=network"`
}

func (l ListTeleporterMessagesRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListTeleporterMessagesRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListTeleporterMessagesRequest) GetPageToken() *string {
	if o == nil {
		return nil
	}
	return o.PageToken
}

func (o *ListTeleporterMessagesRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

func (o *ListTeleporterMessagesRequest) GetSourceBlockchainID() *string {
	if o == nil {
		return nil
	}
	return o.SourceBlockchainID
}

func (o *ListTeleporterMessagesRequest) GetDestinationBlockchainID() *string {
	if o == nil {
		return nil
	}
	return o.DestinationBlockchainID
}

func (o *ListTeleporterMessagesRequest) GetBlockchainID() *string {
	if o == nil {
		return nil
	}
	return o.BlockchainID
}

func (o *ListTeleporterMessagesRequest) GetTo() *string {
	if o == nil {
		return nil
	}
	return o.To
}

func (o *ListTeleporterMessagesRequest) GetFrom() *string {
	if o == nil {
		return nil
	}
	return o.From
}

func (o *ListTeleporterMessagesRequest) GetNetwork() *components.Network {
	if o == nil {
		return nil
	}
	return o.Network
}

type ListTeleporterMessagesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successful response
	ListTeleporterMessagesResponse *components.ListTeleporterMessagesResponse

	Next func() (*ListTeleporterMessagesResponse, error)
}

func (o *ListTeleporterMessagesResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListTeleporterMessagesResponse) GetListTeleporterMessagesResponse() *components.ListTeleporterMessagesResponse {
	if o == nil {
		return nil
	}
	return o.ListTeleporterMessagesResponse
}
