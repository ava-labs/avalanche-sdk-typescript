// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
	"mockserver/internal/sdk/utils"
)

type ListBlockchainsGlobals struct {
	// A supported network type mainnet or testnet/fuji.
	Network *components.GlobalParamNetwork `pathParam:"style=simple,explode=false,name=network"`
}

func (o *ListBlockchainsGlobals) GetNetwork() *components.GlobalParamNetwork {
	if o == nil {
		return nil
	}
	return o.Network
}

type ListBlockchainsRequest struct {
	// A page token, received from a previous list call. Provide this to retrieve the subsequent page.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 10000.
	PageSize *int64 `default:"100" queryParam:"style=form,explode=true,name=pageSize"`
	// Either mainnet or testnet/fuji.
	Network *components.GlobalParamNetwork `pathParam:"style=simple,explode=false,name=network"`
	// The order by which to sort results. Use "asc" for ascending order, "desc" for descending order. Sorted by timestamp or the `sortBy` query parameter, if provided.
	SortOrder *components.SortOrder `queryParam:"style=form,explode=true,name=sortOrder"`
}

func (l ListBlockchainsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListBlockchainsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListBlockchainsRequest) GetPageToken() *string {
	if o == nil {
		return nil
	}
	return o.PageToken
}

func (o *ListBlockchainsRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

func (o *ListBlockchainsRequest) GetNetwork() *components.GlobalParamNetwork {
	if o == nil {
		return nil
	}
	return o.Network
}

func (o *ListBlockchainsRequest) GetSortOrder() *components.SortOrder {
	if o == nil {
		return nil
	}
	return o.SortOrder
}

type ListBlockchainsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successful response
	ListBlockchainsResponse *components.ListBlockchainsResponse

	Next func() (*ListBlockchainsResponse, error)
}

func (o *ListBlockchainsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListBlockchainsResponse) GetListBlockchainsResponse() *components.ListBlockchainsResponse {
	if o == nil {
		return nil
	}
	return o.ListBlockchainsResponse
}
