// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type GetAggregatedSignaturesGlobals struct {
	// A supported network type mainnet or testnet/fuji.
	Network *components.GlobalParamNetwork `pathParam:"style=simple,explode=false,name=network"`
}

func (o *GetAggregatedSignaturesGlobals) GetNetwork() *components.GlobalParamNetwork {
	if o == nil {
		return nil
	}
	return o.Network
}

type GetAggregatedSignaturesRequest struct {
	// Either mainnet or testnet/fuji.
	Network *components.GlobalParamNetwork `pathParam:"style=simple,explode=false,name=network"`
	// A primary network (P or X chain) transaction hash.
	TxHash string `pathParam:"style=simple,explode=false,name=txHash"`
}

func (o *GetAggregatedSignaturesRequest) GetNetwork() *components.GlobalParamNetwork {
	if o == nil {
		return nil
	}
	return o.Network
}

func (o *GetAggregatedSignaturesRequest) GetTxHash() string {
	if o == nil {
		return ""
	}
	return o.TxHash
}

type GetAggregatedSignaturesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successful response
	SignatureAggregationResponse *components.SignatureAggregationResponse
}

func (o *GetAggregatedSignaturesResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetAggregatedSignaturesResponse) GetSignatureAggregationResponse() *components.SignatureAggregationResponse {
	if o == nil {
		return nil
	}
	return o.SignatureAggregationResponse
}
