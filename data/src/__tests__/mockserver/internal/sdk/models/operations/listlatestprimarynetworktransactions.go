// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"errors"
	"fmt"
	"mockserver/internal/sdk/models/components"
	"mockserver/internal/sdk/utils"
)

type ListLatestPrimaryNetworkTransactionsGlobals struct {
	// A supported network type mainnet or testnet/fuji.
	Network *components.GlobalParamNetwork `pathParam:"style=simple,explode=false,name=network"`
}

func (o *ListLatestPrimaryNetworkTransactionsGlobals) GetNetwork() *components.GlobalParamNetwork {
	if o == nil {
		return nil
	}
	return o.Network
}

type ListLatestPrimaryNetworkTransactionsRequest struct {
	// A comma separated list of X-Chain or P-Chain wallet addresses, starting with "avax"/"fuji", "P-avax"/"P-fuji" or "X-avax"/"X-fuji". Also accepts EVM formatted addresses starting with "0x" for C-Chain-related atomic transaction lookups.
	Addresses      *string `queryParam:"style=form,explode=true,name=addresses"`
	L1ValidationID *string `queryParam:"style=form,explode=true,name=l1ValidationId"`
	// Query param for filtering items based on transaction types.
	TxTypes []components.PrimaryNetworkTxType `queryParam:"style=form,explode=true,name=txTypes"`
	// Query param for retrieving items after a specific timestamp.
	StartTimestamp *int64 `queryParam:"style=form,explode=true,name=startTimestamp"`
	// Query param for retrieving items before a specific timestamp.
	EndTimestamp *int64 `queryParam:"style=form,explode=true,name=endTimestamp"`
	// A page token, received from a previous list call. Provide this to retrieve the subsequent page.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.
	PageSize *int64 `default:"10" queryParam:"style=form,explode=true,name=pageSize"`
	// A primary network blockchain id or alias.
	BlockchainID components.BlockchainID `pathParam:"style=simple,explode=false,name=blockchainId"`
	// Either mainnet or testnet/fuji.
	Network *components.GlobalParamNetwork `pathParam:"style=simple,explode=false,name=network"`
	// The order by which to sort results. Use "asc" for ascending order, "desc" for descending order. Sorted by timestamp or the `sortBy` query parameter, if provided.
	SortOrder *components.SortOrder `queryParam:"style=form,explode=true,name=sortOrder"`
}

func (l ListLatestPrimaryNetworkTransactionsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListLatestPrimaryNetworkTransactionsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListLatestPrimaryNetworkTransactionsRequest) GetAddresses() *string {
	if o == nil {
		return nil
	}
	return o.Addresses
}

func (o *ListLatestPrimaryNetworkTransactionsRequest) GetL1ValidationID() *string {
	if o == nil {
		return nil
	}
	return o.L1ValidationID
}

func (o *ListLatestPrimaryNetworkTransactionsRequest) GetTxTypes() []components.PrimaryNetworkTxType {
	if o == nil {
		return nil
	}
	return o.TxTypes
}

func (o *ListLatestPrimaryNetworkTransactionsRequest) GetStartTimestamp() *int64 {
	if o == nil {
		return nil
	}
	return o.StartTimestamp
}

func (o *ListLatestPrimaryNetworkTransactionsRequest) GetEndTimestamp() *int64 {
	if o == nil {
		return nil
	}
	return o.EndTimestamp
}

func (o *ListLatestPrimaryNetworkTransactionsRequest) GetPageToken() *string {
	if o == nil {
		return nil
	}
	return o.PageToken
}

func (o *ListLatestPrimaryNetworkTransactionsRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

func (o *ListLatestPrimaryNetworkTransactionsRequest) GetBlockchainID() components.BlockchainID {
	if o == nil {
		return components.BlockchainID("")
	}
	return o.BlockchainID
}

func (o *ListLatestPrimaryNetworkTransactionsRequest) GetNetwork() *components.GlobalParamNetwork {
	if o == nil {
		return nil
	}
	return o.Network
}

func (o *ListLatestPrimaryNetworkTransactionsRequest) GetSortOrder() *components.SortOrder {
	if o == nil {
		return nil
	}
	return o.SortOrder
}

type ListLatestPrimaryNetworkTransactionsResponseBodyType string

const (
	ListLatestPrimaryNetworkTransactionsResponseBodyTypeListPChainTransactionsResponse       ListLatestPrimaryNetworkTransactionsResponseBodyType = "ListPChainTransactionsResponse"
	ListLatestPrimaryNetworkTransactionsResponseBodyTypeListXChainTransactionsResponse       ListLatestPrimaryNetworkTransactionsResponseBodyType = "ListXChainTransactionsResponse"
	ListLatestPrimaryNetworkTransactionsResponseBodyTypeListCChainAtomicTransactionsResponse ListLatestPrimaryNetworkTransactionsResponseBodyType = "ListCChainAtomicTransactionsResponse"
)

// ListLatestPrimaryNetworkTransactionsResponseBody - Successful response
type ListLatestPrimaryNetworkTransactionsResponseBody struct {
	ListPChainTransactionsResponse       *components.ListPChainTransactionsResponse       `queryParam:"inline"`
	ListXChainTransactionsResponse       *components.ListXChainTransactionsResponse       `queryParam:"inline"`
	ListCChainAtomicTransactionsResponse *components.ListCChainAtomicTransactionsResponse `queryParam:"inline"`

	Type ListLatestPrimaryNetworkTransactionsResponseBodyType
}

func CreateListLatestPrimaryNetworkTransactionsResponseBodyListPChainTransactionsResponse(listPChainTransactionsResponse components.ListPChainTransactionsResponse) ListLatestPrimaryNetworkTransactionsResponseBody {
	typ := ListLatestPrimaryNetworkTransactionsResponseBodyTypeListPChainTransactionsResponse

	return ListLatestPrimaryNetworkTransactionsResponseBody{
		ListPChainTransactionsResponse: &listPChainTransactionsResponse,
		Type:                           typ,
	}
}

func CreateListLatestPrimaryNetworkTransactionsResponseBodyListXChainTransactionsResponse(listXChainTransactionsResponse components.ListXChainTransactionsResponse) ListLatestPrimaryNetworkTransactionsResponseBody {
	typ := ListLatestPrimaryNetworkTransactionsResponseBodyTypeListXChainTransactionsResponse

	return ListLatestPrimaryNetworkTransactionsResponseBody{
		ListXChainTransactionsResponse: &listXChainTransactionsResponse,
		Type:                           typ,
	}
}

func CreateListLatestPrimaryNetworkTransactionsResponseBodyListCChainAtomicTransactionsResponse(listCChainAtomicTransactionsResponse components.ListCChainAtomicTransactionsResponse) ListLatestPrimaryNetworkTransactionsResponseBody {
	typ := ListLatestPrimaryNetworkTransactionsResponseBodyTypeListCChainAtomicTransactionsResponse

	return ListLatestPrimaryNetworkTransactionsResponseBody{
		ListCChainAtomicTransactionsResponse: &listCChainAtomicTransactionsResponse,
		Type:                                 typ,
	}
}

func (u *ListLatestPrimaryNetworkTransactionsResponseBody) UnmarshalJSON(data []byte) error {

	var listPChainTransactionsResponse components.ListPChainTransactionsResponse = components.ListPChainTransactionsResponse{}
	if err := utils.UnmarshalJSON(data, &listPChainTransactionsResponse, "", true, true); err == nil {
		u.ListPChainTransactionsResponse = &listPChainTransactionsResponse
		u.Type = ListLatestPrimaryNetworkTransactionsResponseBodyTypeListPChainTransactionsResponse
		return nil
	}

	var listXChainTransactionsResponse components.ListXChainTransactionsResponse = components.ListXChainTransactionsResponse{}
	if err := utils.UnmarshalJSON(data, &listXChainTransactionsResponse, "", true, true); err == nil {
		u.ListXChainTransactionsResponse = &listXChainTransactionsResponse
		u.Type = ListLatestPrimaryNetworkTransactionsResponseBodyTypeListXChainTransactionsResponse
		return nil
	}

	var listCChainAtomicTransactionsResponse components.ListCChainAtomicTransactionsResponse = components.ListCChainAtomicTransactionsResponse{}
	if err := utils.UnmarshalJSON(data, &listCChainAtomicTransactionsResponse, "", true, true); err == nil {
		u.ListCChainAtomicTransactionsResponse = &listCChainAtomicTransactionsResponse
		u.Type = ListLatestPrimaryNetworkTransactionsResponseBodyTypeListCChainAtomicTransactionsResponse
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for ListLatestPrimaryNetworkTransactionsResponseBody", string(data))
}

func (u ListLatestPrimaryNetworkTransactionsResponseBody) MarshalJSON() ([]byte, error) {
	if u.ListPChainTransactionsResponse != nil {
		return utils.MarshalJSON(u.ListPChainTransactionsResponse, "", true)
	}

	if u.ListXChainTransactionsResponse != nil {
		return utils.MarshalJSON(u.ListXChainTransactionsResponse, "", true)
	}

	if u.ListCChainAtomicTransactionsResponse != nil {
		return utils.MarshalJSON(u.ListCChainAtomicTransactionsResponse, "", true)
	}

	return nil, errors.New("could not marshal union type ListLatestPrimaryNetworkTransactionsResponseBody: all fields are null")
}

type ListLatestPrimaryNetworkTransactionsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successful response
	OneOf *ListLatestPrimaryNetworkTransactionsResponseBody

	Next func() (*ListLatestPrimaryNetworkTransactionsResponse, error)
}

func (o *ListLatestPrimaryNetworkTransactionsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListLatestPrimaryNetworkTransactionsResponse) GetOneOf() *ListLatestPrimaryNetworkTransactionsResponseBody {
	if o == nil {
		return nil
	}
	return o.OneOf
}
