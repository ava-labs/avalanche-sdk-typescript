// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
	"mockserver/internal/sdk/utils"
)

type ListLatestTransactionsGlobals struct {
	// A supported EVM chain id, chain alias, or blockchain id.
	ChainID *string `pathParam:"style=simple,explode=false,name=chainId"`
}

func (o *ListLatestTransactionsGlobals) GetChainID() *string {
	if o == nil {
		return nil
	}
	return o.ChainID
}

type ListLatestTransactionsRequest struct {
	// A page token, received from a previous list call. Provide this to retrieve the subsequent page.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// The maximum number of items to return. The minimum page size is 1. The maximum pageSize is 100.
	PageSize *int64 `default:"10" queryParam:"style=form,explode=true,name=pageSize"`
	// A supported evm chain id or blockchain id. Use the `/chains` endpoint to get a list of supported chain ids.
	ChainID *string `pathParam:"style=simple,explode=false,name=chainId"`
	// A status filter for listed transactions.
	Status *components.TransactionStatus `queryParam:"style=form,explode=true,name=status"`
}

func (l ListLatestTransactionsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListLatestTransactionsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListLatestTransactionsRequest) GetPageToken() *string {
	if o == nil {
		return nil
	}
	return o.PageToken
}

func (o *ListLatestTransactionsRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

func (o *ListLatestTransactionsRequest) GetChainID() *string {
	if o == nil {
		return nil
	}
	return o.ChainID
}

func (o *ListLatestTransactionsRequest) GetStatus() *components.TransactionStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

type ListLatestTransactionsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successful response
	ListNativeTransactionsResponse *components.ListNativeTransactionsResponse

	Next func() (*ListLatestTransactionsResponse, error)
}

func (o *ListLatestTransactionsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListLatestTransactionsResponse) GetListNativeTransactionsResponse() *components.ListNativeTransactionsResponse {
	if o == nil {
		return nil
	}
	return o.ListNativeTransactionsResponse
}
