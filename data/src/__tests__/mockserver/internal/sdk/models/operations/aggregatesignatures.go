// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type AggregateSignaturesGlobals struct {
	// A supported network type mainnet or testnet/fuji.
	Network *components.GlobalParamNetwork `pathParam:"style=simple,explode=false,name=network"`
}

func (o *AggregateSignaturesGlobals) GetNetwork() *components.GlobalParamNetwork {
	if o == nil {
		return nil
	}
	return o.Network
}

type AggregateSignaturesRequest struct {
	// Either mainnet or testnet/fuji.
	Network                    *components.GlobalParamNetwork        `pathParam:"style=simple,explode=false,name=network"`
	SignatureAggregatorRequest components.SignatureAggregatorRequest `request:"mediaType=application/json"`
}

func (o *AggregateSignaturesRequest) GetNetwork() *components.GlobalParamNetwork {
	if o == nil {
		return nil
	}
	return o.Network
}

func (o *AggregateSignaturesRequest) GetSignatureAggregatorRequest() components.SignatureAggregatorRequest {
	if o == nil {
		return components.SignatureAggregatorRequest{}
	}
	return o.SignatureAggregatorRequest
}

type AggregateSignaturesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successful response
	SignatureAggregationResponse *components.SignatureAggregationResponse
}

func (o *AggregateSignaturesResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *AggregateSignaturesResponse) GetSignatureAggregationResponse() *components.SignatureAggregationResponse {
	if o == nil {
		return nil
	}
	return o.SignatureAggregationResponse
}
