/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ICMRollingWindowMetricsValue,
  ICMRollingWindowMetricsValue$inboundSchema,
  ICMRollingWindowMetricsValue$Outbound,
  ICMRollingWindowMetricsValue$outboundSchema,
} from "./icmrollingwindowmetricsvalue.js";

export type ICMRollingWindowMetricsApiResponse = {
  /**
   * Array of current metrics values for different windows.
   */
  result: ICMRollingWindowMetricsValue;
};

/** @internal */
export const ICMRollingWindowMetricsApiResponse$inboundSchema: z.ZodType<
  ICMRollingWindowMetricsApiResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  result: ICMRollingWindowMetricsValue$inboundSchema,
});

/** @internal */
export type ICMRollingWindowMetricsApiResponse$Outbound = {
  result: ICMRollingWindowMetricsValue$Outbound;
};

/** @internal */
export const ICMRollingWindowMetricsApiResponse$outboundSchema: z.ZodType<
  ICMRollingWindowMetricsApiResponse$Outbound,
  z.ZodTypeDef,
  ICMRollingWindowMetricsApiResponse
> = z.object({
  result: ICMRollingWindowMetricsValue$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ICMRollingWindowMetricsApiResponse$ {
  /** @deprecated use `ICMRollingWindowMetricsApiResponse$inboundSchema` instead. */
  export const inboundSchema = ICMRollingWindowMetricsApiResponse$inboundSchema;
  /** @deprecated use `ICMRollingWindowMetricsApiResponse$outboundSchema` instead. */
  export const outboundSchema =
    ICMRollingWindowMetricsApiResponse$outboundSchema;
  /** @deprecated use `ICMRollingWindowMetricsApiResponse$Outbound` instead. */
  export type Outbound = ICMRollingWindowMetricsApiResponse$Outbound;
}

export function icmRollingWindowMetricsApiResponseToJSON(
  icmRollingWindowMetricsApiResponse: ICMRollingWindowMetricsApiResponse,
): string {
  return JSON.stringify(
    ICMRollingWindowMetricsApiResponse$outboundSchema.parse(
      icmRollingWindowMetricsApiResponse,
    ),
  );
}

export function icmRollingWindowMetricsApiResponseFromJSON(
  jsonString: string,
): SafeParseResult<ICMRollingWindowMetricsApiResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ICMRollingWindowMetricsApiResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ICMRollingWindowMetricsApiResponse' from JSON`,
  );
}
