/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ChainRollingWindowMetricsValue = {
  /**
   * Aggregated value for the current metrics in last hour.
   */
  lastHour?: number | undefined;
  /**
   * Aggregated value for the current metrics in last day.
   */
  lastDay?: number | undefined;
  /**
   * Aggregated value for the current metrics in last week.
   */
  lastWeek?: number | undefined;
  /**
   * Aggregated value for the current metrics in last month.
   */
  lastMonth?: number | undefined;
  /**
   * Aggregated value for the current metrics in last 90 days.
   */
  last90Days?: number | undefined;
  /**
   * Aggregated value for the current metrics in last year.
   */
  lastYear?: number | undefined;
  /**
   * Aggregated value for the current metrics for all time.
   */
  allTime?: number | undefined;
};

/** @internal */
export const ChainRollingWindowMetricsValue$inboundSchema: z.ZodType<
  ChainRollingWindowMetricsValue,
  z.ZodTypeDef,
  unknown
> = z.object({
  lastHour: z.number().optional(),
  lastDay: z.number().optional(),
  lastWeek: z.number().optional(),
  lastMonth: z.number().optional(),
  last90Days: z.number().optional(),
  lastYear: z.number().optional(),
  allTime: z.number().optional(),
});

/** @internal */
export type ChainRollingWindowMetricsValue$Outbound = {
  lastHour?: number | undefined;
  lastDay?: number | undefined;
  lastWeek?: number | undefined;
  lastMonth?: number | undefined;
  last90Days?: number | undefined;
  lastYear?: number | undefined;
  allTime?: number | undefined;
};

/** @internal */
export const ChainRollingWindowMetricsValue$outboundSchema: z.ZodType<
  ChainRollingWindowMetricsValue$Outbound,
  z.ZodTypeDef,
  ChainRollingWindowMetricsValue
> = z.object({
  lastHour: z.number().optional(),
  lastDay: z.number().optional(),
  lastWeek: z.number().optional(),
  lastMonth: z.number().optional(),
  last90Days: z.number().optional(),
  lastYear: z.number().optional(),
  allTime: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChainRollingWindowMetricsValue$ {
  /** @deprecated use `ChainRollingWindowMetricsValue$inboundSchema` instead. */
  export const inboundSchema = ChainRollingWindowMetricsValue$inboundSchema;
  /** @deprecated use `ChainRollingWindowMetricsValue$outboundSchema` instead. */
  export const outboundSchema = ChainRollingWindowMetricsValue$outboundSchema;
  /** @deprecated use `ChainRollingWindowMetricsValue$Outbound` instead. */
  export type Outbound = ChainRollingWindowMetricsValue$Outbound;
}

export function chainRollingWindowMetricsValueToJSON(
  chainRollingWindowMetricsValue: ChainRollingWindowMetricsValue,
): string {
  return JSON.stringify(
    ChainRollingWindowMetricsValue$outboundSchema.parse(
      chainRollingWindowMetricsValue,
    ),
  );
}

export function chainRollingWindowMetricsValueFromJSON(
  jsonString: string,
): SafeParseResult<ChainRollingWindowMetricsValue, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ChainRollingWindowMetricsValue$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChainRollingWindowMetricsValue' from JSON`,
  );
}
