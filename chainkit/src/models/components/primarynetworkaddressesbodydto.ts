/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PrimaryNetworkAddressesBodyDto = {
  /**
   * Comma-separated list of primary network addresses
   */
  addresses: string;
};

/** @internal */
export const PrimaryNetworkAddressesBodyDto$inboundSchema: z.ZodType<
  PrimaryNetworkAddressesBodyDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  addresses: z.string(),
});

/** @internal */
export type PrimaryNetworkAddressesBodyDto$Outbound = {
  addresses: string;
};

/** @internal */
export const PrimaryNetworkAddressesBodyDto$outboundSchema: z.ZodType<
  PrimaryNetworkAddressesBodyDto$Outbound,
  z.ZodTypeDef,
  PrimaryNetworkAddressesBodyDto
> = z.object({
  addresses: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PrimaryNetworkAddressesBodyDto$ {
  /** @deprecated use `PrimaryNetworkAddressesBodyDto$inboundSchema` instead. */
  export const inboundSchema = PrimaryNetworkAddressesBodyDto$inboundSchema;
  /** @deprecated use `PrimaryNetworkAddressesBodyDto$outboundSchema` instead. */
  export const outboundSchema = PrimaryNetworkAddressesBodyDto$outboundSchema;
  /** @deprecated use `PrimaryNetworkAddressesBodyDto$Outbound` instead. */
  export type Outbound = PrimaryNetworkAddressesBodyDto$Outbound;
}

export function primaryNetworkAddressesBodyDtoToJSON(
  primaryNetworkAddressesBodyDto: PrimaryNetworkAddressesBodyDto,
): string {
  return JSON.stringify(
    PrimaryNetworkAddressesBodyDto$outboundSchema.parse(
      primaryNetworkAddressesBodyDto,
    ),
  );
}

export function primaryNetworkAddressesBodyDtoFromJSON(
  jsonString: string,
): SafeParseResult<PrimaryNetworkAddressesBodyDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PrimaryNetworkAddressesBodyDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PrimaryNetworkAddressesBodyDto' from JSON`,
  );
}
